{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/admin/actions.js"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\n\nconst firestore = admin.firestore();\n\n/**\n * Confirma un turno pendiente.\n * @param {string} turnoId El ID del turno a confirmar.\n */\nexport async function confirmarTurno(turnoId) {\n  if (!turnoId) {\n    return { success: false, error: 'Se requiere el ID del turno.' };\n  }\n\n  try {\n    const turnoRef = firestore.collection('turnos').doc(turnoId);\n    await turnoRef.update({ estado: 'confirmado' });\n\n    // Revalidamos tanto la página de admin como la de los turnos del usuario.\n    revalidatePath('/admin/turnos');\n    revalidatePath('/mis-turnos');\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error al confirmar el turno:', error);\n    return { success: false, error: 'No se pudo actualizar el turno.' };\n  }\n}\n\n/**\n * Cancela un turno pendiente o confirmado.\n * @param {string} turnoId El ID del turno a cancelar.\n */\nexport async function cancelarTurno(turnoId) {\n  if (!turnoId) {\n    return { success: false, error: 'Se requiere el ID del turno.' };\n  }\n\n  try {\n    const turnoRef = firestore.collection('turnos').doc(turnoId);\n    await turnoRef.update({ estado: 'cancelado' });\n\n    // Revalidamos ambas páginas para que el cambio se refleje en todos lados.\n    revalidatePath('/admin/turnos');\n    revalidatePath('/mis-turnos');\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error al cancelar el turno:', error);\n    return { success: false, error: 'No se pudo actualizar el turno.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;;IAYsB,iBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/admin/actions.js"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\n\nconst firestore = admin.firestore();\n\n/**\n * Confirma un turno pendiente.\n * @param {string} turnoId El ID del turno a confirmar.\n */\nexport async function confirmarTurno(turnoId) {\n  if (!turnoId) {\n    return { success: false, error: 'Se requiere el ID del turno.' };\n  }\n\n  try {\n    const turnoRef = firestore.collection('turnos').doc(turnoId);\n    await turnoRef.update({ estado: 'confirmado' });\n\n    // Revalidamos tanto la página de admin como la de los turnos del usuario.\n    revalidatePath('/admin/turnos');\n    revalidatePath('/mis-turnos');\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error al confirmar el turno:', error);\n    return { success: false, error: 'No se pudo actualizar el turno.' };\n  }\n}\n\n/**\n * Cancela un turno pendiente o confirmado.\n * @param {string} turnoId El ID del turno a cancelar.\n */\nexport async function cancelarTurno(turnoId) {\n  if (!turnoId) {\n    return { success: false, error: 'Se requiere el ID del turno.' };\n  }\n\n  try {\n    const turnoRef = firestore.collection('turnos').doc(turnoId);\n    await turnoRef.update({ estado: 'cancelado' });\n\n    // Revalidamos ambas páginas para que el cambio se refleje en todos lados.\n    revalidatePath('/admin/turnos');\n    revalidatePath('/mis-turnos');\n\n    return { success: true };\n  } catch (error) {\n    console.error('Error al cancelar el turno:', error);\n    return { success: false, error: 'No se pudo actualizar el turno.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;;IAoCsB,gBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/admin/TurnoActions.jsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { FiCheckCircle, FiXCircle, FiLoader } from 'react-icons/fi';\nimport { confirmarTurno, cancelarTurno } from '@/app/admin/actions';\n\nconst TurnoActions = ({ turnoId }) => {\n    const [loading, setLoading] = useState(null); // null, 'confirm', 'cancel'\n\n    const handleConfirm = async () => {\n        if (!confirm('¿Estás seguro de que deseas confirmar este turno?')) return;\n        setLoading('confirm');\n        try {\n            await confirmarTurno(turnoId);\n        } catch (error) {\n            console.error(\"Error al confirmar:\", error);\n            alert(\"Hubo un error al confirmar el turno.\");\n        }\n        // No es necesario setLoading(null) porque la revalidación recargará el componente.\n    };\n\n    const handleCancel = async () => {\n        if (!confirm('¿Estás seguro de que deseas cancelar este turno?')) return;\n        setLoading('cancel');\n        try {\n            await cancelarTurno(turnoId);\n        } catch (error) {\n            console.error(\"Error al cancelar:\", error);\n            alert(\"Hubo un error al cancelar el turno.\");\n        }\n    };\n\n    return (\n        <div className=\"mt-4 flex space-x-2\">\n            <button\n                onClick={handleConfirm}\n                disabled={!!loading}\n                className=\"flex-1 inline-flex items-center justify-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 disabled:bg-gray-400 transition-colors\"\n            >\n                {loading === 'confirm' ? <FiLoader className=\"animate-spin\" /> : <FiCheckCircle />}\n                <span className=\"ml-2\">Confirmar</span>\n            </button>\n            <button\n                onClick={handleCancel}\n                disabled={!!loading}\n                className=\"flex-1 inline-flex items-center justify-center px-3 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 disabled:bg-gray-400 transition-colors\"\n            >\n                {loading === 'cancel' ? <FiLoader className=\"animate-spin\" /> : <FiXCircle />}\n                <span className=\"ml-2\">Cancelar</span>\n            </button>\n        </div>\n    );\n};\n\nexport default TurnoActions;\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;;;AAJA;;;;AAMA,MAAM,eAAe;QAAC,EAAE,OAAO,EAAE;;IAC7B,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC,OAAO,4BAA4B;IAE1E,MAAM,gBAAgB;QAClB,IAAI,CAAC,QAAQ,sDAAsD;QACnE,WAAW;QACX,IAAI;YACA,MAAM,IAAA,gLAAc,EAAC;QACzB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,uBAAuB;YACrC,MAAM;QACV;IACA,mFAAmF;IACvF;IAEA,MAAM,eAAe;QACjB,IAAI,CAAC,QAAQ,qDAAqD;QAClE,WAAW;QACX,IAAI;YACA,MAAM,IAAA,+KAAa,EAAC;QACxB,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,sBAAsB;YACpC,MAAM;QACV;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BACX,6LAAC;gBACG,SAAS;gBACT,UAAU,CAAC,CAAC;gBACZ,WAAU;;oBAET,YAAY,0BAAY,6LAAC,6JAAQ;wBAAC,WAAU;;;;;iFAAoB,6LAAC,kKAAa;;;;;kCAC/E,6LAAC;wBAAK,WAAU;kCAAO;;;;;;;;;;;;0BAE3B,6LAAC;gBACG,SAAS;gBACT,UAAU,CAAC,CAAC;gBACZ,WAAU;;oBAET,YAAY,yBAAW,6LAAC,6JAAQ;wBAAC,WAAU;;;;;iFAAoB,6LAAC,8JAAS;;;;;kCAC1E,6LAAC;wBAAK,WAAU;kCAAO;;;;;;;;;;;;;;;;;;AAIvC;GA9CM;KAAA;uCAgDS","debugId":null}}]
}