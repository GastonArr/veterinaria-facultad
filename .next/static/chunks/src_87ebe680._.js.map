{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/lib/firebaseConfig.js"],"sourcesContent":["export const firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};"],"names":[],"mappings":";;;;AACU;AADH,MAAM,iBAAiB;IAC5B,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/lib/firebase.js"],"sourcesContent":["import { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { firebaseConfig } from './firebaseConfig';\n\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\nexport { app, db, auth };"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AAEA,MAAM,MAAM,CAAC,IAAA,8KAAO,IAAG,MAAM,GAAG,IAAA,oLAAa,EAAC,iJAAc,IAAI,IAAA,6KAAM;AACtE,MAAM,KAAK,IAAA,kLAAY,EAAC;AACxB,MAAM,OAAO,IAAA,wKAAO,EAAC","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/actions.js"],"sourcesContent":["// Historia de Usuario 5: Gestión de Roles de Usuario\n// Historia de Usuario 6: Completar Perfil de Usuario\n\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\n\n/**\n * @constant aplicationRoles\n * @description Define roles especiales asignados a usuarios específicos según su DNI.\n * Esto centraliza la lógica de asignación de roles de administrador o empleado.\n * Corresponde a la \"Historia de Usuario 5: Gestión de Roles de Usuario\".\n */\nconst aplicationRoles = {\n  '00000001': 'admin',      // Magali - DNI sin puntos\n  '00000002': 'peluquera',\n  '00000003': 'transporte',\n};\n\n/**\n * @function completarPerfil\n * @description Server Action para guardar los datos del perfil de un usuario y asignarle un rol.\n * Se ejecuta después de que un usuario se registra exitosamente.\n * Corresponde a las \"Historias de Usuario 5 y 6\".\n * @param {string} userId - El ID del usuario de Firebase Authentication.\n * @param {object} userData - Los datos del perfil del formulario.\n */\nexport async function completarPerfil(userId, userData) {\n  const firestore = admin.firestore();\n  const auth = admin.auth();\n\n  const { \n    nombre, \n    apellido, \n    dni, \n    telefonoPrincipal, \n    telefonoSecundario, \n    direccion, \n    barrio, \n    nombreContactoEmergencia, \n    telefonoContactoEmergencia \n  } = userData;\n  \n  if (!userId || !nombre || !apellido || !dni || !telefonoPrincipal || !direccion || !barrio || !nombreContactoEmergencia || !telefonoContactoEmergencia) {\n    console.error('Validation failed. Missing data:', { userId, ...userData });\n    return { success: false, error: 'Faltan datos esenciales para completar el perfil.' };\n  }\n\n  try {\n    // 1. Asignación de Rol (HU 5)\n    // Se verifica si el DNI del usuario corresponde a un rol especial.\n    // Si no, se le asigna el rol 'dueño' por defecto.\n    const userRole = aplicationRoles[dni] || 'dueño';\n\n    // Se establece el \"custom claim\" en Firebase Authentication. Este token de rol\n    // se usará en toda la app para controlar el acceso.\n    await auth.setCustomUserClaims(userId, { role: userRole });\n\n    // 2. Guardar Datos del Perfil en Firestore (HU 6)\n    // Se almacenan los detalles del perfil en la colección 'users'.\n    await firestore.collection('users').doc(userId).set({\n      nombre,\n      apellido,\n      dni,\n      telefonoPrincipal,\n      telefonoSecundario: telefonoSecundario || '',\n      direccion,\n      barrio,\n      nombreContactoEmergencia,\n      telefonoContactoEmergencia,\n      role: userRole,\n      profileCompleted: true,\n      createdAt: admin.firestore.FieldValue.serverTimestamp(),\n    }, { merge: true });\n\n    revalidatePath('/');\n    \n    return { success: true, role: userRole };\n\n  } catch (error) {\n    console.error('Error al completar el perfil en el servidor:', error);\n    return { success: false, error: 'Ocurrió un error en el servidor al procesar tu perfil.' };\n  }\n}\n\n/**\n * Server Action para agregar una nueva mascota a un usuario.\n */\nexport async function agregarMascota(userId, mascotaData) {\n    if (!userId) {\n        return { success: false, error: 'Usuario no autenticado.' };\n    }\n\n    const { nombre, especie, raza, fechaNacimiento, tamaño, enAdopcion } = mascotaData;\n\n    if (!nombre || !especie || !raza || !fechaNacimiento || !tamaño) {\n        return { success: false, error: 'Todos los campos, incluyendo el tamaño, son obligatorios.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const mascotaRef = await firestore.collection('users').doc(userId).collection('mascotas').add({\n            nombre,\n            especie,\n            raza,\n            fechaNacimiento,\n            tamaño,\n            enAdopcion: enAdopcion || false, \n            createdAt: new Date(),\n        });\n\n        revalidatePath('/mascotas');\n\n        return { success: true, mascotaId: mascotaRef.id };\n\n    } catch (error) {\n        console.error('Error al agregar la mascota:', error);\n        return { success: false, error: 'No se pudo registrar la mascota en la base de datos.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IA4BsB,kBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/contexts/AuthContext.js"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { \n    onAuthStateChanged,\n    GoogleAuthProvider,\n    signInWithPopup,\n    signOut,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    sendPasswordResetEmail,\n    updatePassword,\n    EmailAuthProvider,\n    reauthenticateWithCredential\n} from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { useRouter } from 'next/navigation';\nimport { completarPerfil } from '@/app/actions';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    // Se elimina userRole. Esta lógica ahora vive en el servidor (layout.js).\n    const [loading, setLoading] = useState(true);\n    const router = useRouter();\n\n    const loginWithGoogle = async () => {\n        const provider = new GoogleAuthProvider();\n        try {\n            return await signInWithPopup(auth, provider);\n        } catch (error) {\n            console.error(\"Error durante el inicio de sesión con Google:\", error);\n        }\n    };\n\n    const loginWithEmail = async (email, password) => {\n        try {\n            return await signInWithEmailAndPassword(auth, email, password);\n        } catch (error) {\n            console.error(\"Error durante el inicio de sesión con email y contraseña:\", error);\n            throw error;\n        }\n    };\n\n    const registerWithEmailAndPassword = async (email, password, profileData) => {\n        try {\n            const result = await createUserWithEmailAndPassword(auth, email, password);\n            const user = result.user;\n            if (user) {\n                await completarPerfil(user.uid, profileData);\n            }\n            return result;\n        } catch (error) {\n            console.error(\"Error durante el registro:\", error);\n            throw error;\n        }\n    };\n\n    const resetPassword = async (email) => {\n        try {\n            await sendPasswordResetEmail(auth, email);\n        } catch (error) {\n            console.error(\"Error al enviar el correo de restablecimiento de contraseña:\", error);\n            throw error;\n        }\n    };\n\n    const changePassword = async (currentPassword, newPassword) => {\n        const user = auth.currentUser;\n        if (!user || !user.email) {\n            throw new Error(\"No hay un usuario autenticado para realizar esta operación.\");\n        }\n\n        const credential = EmailAuthProvider.credential(user.email, currentPassword);\n\n        try {\n            await reauthenticateWithCredential(user, credential);\n            await updatePassword(user, newPassword);\n        } catch (error) {\n            console.error(\"Error al cambiar la contraseña:\", error);\n            throw error;\n        }\n    };\n\n    const logout = async () => {\n        try {\n            await signOut(auth);\n            // Hacemos una petición a la API para que borre la cookie de sesión del servidor\n            await fetch('/api/auth/session', { method: 'DELETE' });\n            // Forzamos una recarga completa para asegurar que el estado del servidor se actualiza\n            window.location.href = '/'; \n        } catch (error) {\n            console.error(\"Error durante el cierre de sesión:\", error);\n        }\n    };\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n            setLoading(true);\n            if (currentUser) {\n                // Creamos la cookie de sesión del lado del servidor\n                const idToken = await currentUser.getIdToken();\n                await fetch('/api/auth/session', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ idToken }),\n                });\n                setUser(currentUser);\n            } else {\n                // Si no hay usuario, nos aseguramos de que la cookie de sesión se borre\n                await fetch('/api/auth/session', { method: 'DELETE' });\n                setUser(null);\n            }\n            setLoading(false);\n        });\n\n        return () => unsubscribe();\n    }, []);\n\n    const value = {\n        user,\n        loading,\n        loginWithGoogle,\n        loginWithEmail,\n        registerWithEmailAndPassword,\n        resetPassword,\n        changePassword, \n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/Header.jsx"],"sourcesContent":["'use client';\nimport Link from 'next/link';\nimport { useAuth } from '@/contexts/AuthContext';\n\n// El Header ahora recibe el rol como una prop desde el Layout (Server Component).\nconst Header = ({ role }) => {\n  // Ya no necesitamos userRole del contexto, solo la info del usuario y el loading.\n  const { user, loading, logout } = useAuth();\n\n  // Función para obtener un nombre corto y amigable para el usuario.\n  const getUserDisplayName = () => {\n    if (!user) return '';\n    if (user.displayName) return user.displayName.split(' ')[0]; // Devuelve el primer nombre\n    return user.email;\n  };\n\n  return (\n    <header className=\"bg-white text-gray-800 p-4 flex flex-wrap justify-between items-center shadow-md sticky top-0 z-50 w-full gap-y-3 sm:gap-y-0\">\n\n      {/* 1. Título a la Izquierda */}\n      <div className=\"flex-shrink-0 mr-6\">\n        <Link href=\"/\" className=\"text-xl md:text-2xl font-bold text-gray-900 hover:text-violet-700 transition-colors\">\n          Veterinaria Magali Martin\n        </Link>\n      </div>\n\n      {/* 2. Navegación Principal (Centrada y solo si hay usuario) */}\n      {user && (\n          <nav className=\"w-full sm:w-auto flex-grow flex justify-center items-center order-3 sm:order-2\">\n              <div className=\"flex justify-center items-center space-x-3 md:space-x-4 border-t sm:border-t-0 pt-3 sm:pt-0 w-full sm:w-auto\">\n                <Link href=\"/mis-datos\" className=\"text-xs md:text-sm font-medium hover:text-violet-600 transition-colors uppercase tracking-wider\">\n                  Mis Datos\n                </Link>\n                <span className=\"text-gray-300\">|</span>\n                <Link href=\"/mascotas\" className=\"text-xs md:text-sm font-medium hover:text-violet-600 transition-colors uppercase tracking-wider\">\n                  Mis Mascotas\n                </Link>\n                <span className=\"text-gray-300\">|</span>\n                <Link href=\"/mis-turnos\" className=\"text-xs md:text-sm font-medium hover:text-violet-600 transition-colors uppercase tracking-wider\">\n                  Mis Turnos\n                </Link>\n              </div>\n          </nav>\n      )}\n\n      {/* 3. Acciones del Usuario (Derecha) */}\n      <div className=\"flex-shrink-0 flex items-center gap-3 order-2 sm:order-3\">\n        {loading ? (\n          <div className=\"h-8 w-32 bg-gray-200 rounded-full animate-pulse\"></div>\n        ) : user ? (\n          <>\n            {/* Mostramos el rol de admin usando la prop */}\n            {role === 'admin' && (\n                <Link href=\"/admin\" className=\"bg-red-100 text-red-700 font-semibold px-3 py-2 rounded-full text-xs hover:bg-red-200 transition-colors hidden sm:block\">\n                  Admin\n                </Link>\n            )}\n            <span className=\"text-sm text-gray-600 hidden lg:block\">Hola, {getUserDisplayName()}</span>\n            <button onClick={logout} className=\"bg-violet-600 hover:bg-violet-700 text-white font-semibold px-4 py-2 rounded-full transition-colors text-sm\">\n              Salir\n            </button>\n          </>\n        ) : (\n          <Link href=\"/login\" className=\"bg-violet-600 hover:bg-violet-700 text-white font-semibold px-4 py-2 rounded-full transition-colors\">\n            Iniciar Sesión\n          </Link>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;;AACA;AACA;;;AAFA;;;AAIA,kFAAkF;AAClF,MAAM,SAAS;QAAC,EAAE,IAAI,EAAE;;IACtB,kFAAkF;IAClF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAA,4IAAO;IAEzC,mEAAmE;IACnE,MAAM,qBAAqB;QACzB,IAAI,CAAC,MAAM,OAAO;QAClB,IAAI,KAAK,WAAW,EAAE,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,4BAA4B;QACzF,OAAO,KAAK,KAAK;IACnB;IAEA,qBACE,6LAAC;QAAO,WAAU;;0BAGhB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,0KAAI;oBAAC,MAAK;oBAAI,WAAU;8BAAsF;;;;;;;;;;;YAMhH,sBACG,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,0KAAI;4BAAC,MAAK;4BAAa,WAAU;sCAAkG;;;;;;sCAGpI,6LAAC;4BAAK,WAAU;sCAAgB;;;;;;sCAChC,6LAAC,0KAAI;4BAAC,MAAK;4BAAY,WAAU;sCAAkG;;;;;;sCAGnI,6LAAC;4BAAK,WAAU;sCAAgB;;;;;;sCAChC,6LAAC,0KAAI;4BAAC,MAAK;4BAAc,WAAU;sCAAkG;;;;;;;;;;;;;;;;;0BAQ/I,6LAAC;gBAAI,WAAU;0BACZ,wBACC,6LAAC;oBAAI,WAAU;;;;;+DACb,qBACF;;wBAEG,SAAS,yBACN,6LAAC,0KAAI;4BAAC,MAAK;4BAAS,WAAU;sCAA0H;;;;;;sCAI5J,6LAAC;4BAAK,WAAU;;gCAAwC;gCAAO;;;;;;;sCAC/D,6LAAC;4BAAO,SAAS;4BAAQ,WAAU;sCAA8G;;;;;;;iDAKnJ,6LAAC,0KAAI;oBAAC,MAAK;oBAAS,WAAU;8BAAsG;;;;;;;;;;;;;;;;;AAO9I;GAjEM;;QAE8B,4IAAO;;;KAFrC;uCAmES","debugId":null}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/Footer.jsx"],"sourcesContent":["'use client';\n\nexport default function Footer() {\n    return (\n        <footer className=\"bg-gray-800 text-white p-4 mt-auto\">\n            <div className=\"container mx-auto text-center\">\n                <p>&copy; 2024 Veterinaria Magali Martin. Todos los derechos reservados.</p>\n            </div>\n        </footer>\n    );\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAEe,SAAS;IACpB,qBACI,6LAAC;QAAO,WAAU;kBACd,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;0BAAE;;;;;;;;;;;;;;;;AAInB;KARwB","debugId":null}}]
}