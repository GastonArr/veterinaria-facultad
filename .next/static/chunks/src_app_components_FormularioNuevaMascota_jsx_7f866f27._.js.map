{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/FormularioNuevaMascota.jsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\n\nexport default function FormularioNuevaMascota() {\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    // Esta función se activará cuando el formulario se envíe\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setError('');\n        setSuccess('');\n\n        const formData = new FormData(event.currentTarget);\n        \n        // Aquí llamaremos a la Server Action en el futuro\n        // Por ahora, solo mostraremos un mensaje de éxito simulado.\n\n        // Simulando una llamada a la API\n        try {\n            console.log('Datos del formulario:', Object.fromEntries(formData.entries()));\n            // Aquí iría la llamada a la Server Action: await agregarMascotaAction(formData);\n\n            setSuccess('¡Mascota registrada con éxito! Redirigiendo a tu lista de mascotas...');\n            \n            // Limpiamos el formulario después del éxito\n            event.target.reset();\n\n            // Redirección simple después de 2 segundos\n            setTimeout(() => {\n                window.location.href = '/mascotas';\n            }, 2000);\n\n        } catch (err) {\n            setError(err.message || 'Ocurrió un error al registrar la mascota.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Nombre */}\n            <div>\n                <label htmlFor=\"nombre\" className=\"block text-sm font-medium text-gray-700\">Nombre</label>\n                <input \n                    type=\"text\" \n                    name=\"nombre\" \n                    id=\"nombre\" \n                    required \n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-violet-500 focus:border-violet-500 sm:text-sm\" \n                    placeholder=\"Ej: Rocky\"\n                />\n            </div>\n\n            {/* Especie y Raza */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                    <label htmlFor=\"especie\" className=\"block text-sm font-medium text-gray-700\">Especie</label>\n                    <input type=\"text\" name=\"especie\" id=\"especie\" required className=\"mt-1 block w-full input\" placeholder=\"Ej: Perro\" />\n                </div>\n                <div>\n                    <label htmlFor=\"raza\" className=\"block text-sm font-medium text-gray-700\">Raza</label>\n                    <input type=\"text\" name=\"raza\" id=\"raza\" required className=\"mt-1 block w-full input\" placeholder=\"Ej: Labrador\" />\n                </div>\n            </div>\n\n            {/* Fecha de Nacimiento */}\n            <div>\n                <label htmlFor=\"fechaNacimiento\" className=\"block text-sm font-medium text-gray-700\">Fecha de Nacimiento</label>\n                <input \n                    type=\"date\" \n                    name=\"fechaNacimiento\" \n                    id=\"fechaNacimiento\" \n                    required \n                    className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-violet-500 focus:border-violet-500 sm:text-sm\"\n                />\n            </div>\n            \n            {/* Mensajes de estado */}\n            {error && <p className=\"text-sm text-red-600 bg-red-100 p-3 rounded-md\">{error}</p>}\n            {success && <p className=\"text-sm text-green-600 bg-green-100 p-3 rounded-md\">{success}</p>}\n\n            {/* Botón de Envío */}\n            <div>\n                <button \n                    type=\"submit\" \n                    className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-full shadow-sm text-sm font-medium text-white bg-violet-600 hover:bg-violet-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500 transition-colors duration-300\"\n                >\n                    Registrar Mascota\n                </button>\n            </div>\n        </form>\n    );\n}\n"],"names":[],"mappings":";;;;;AAGA;;;AAFA;;AAIe,SAAS;;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IAEvC,yDAAyD;IACzD,MAAM,eAAe,OAAO;QACxB,MAAM,cAAc;QACpB,SAAS;QACT,WAAW;QAEX,MAAM,WAAW,IAAI,SAAS,MAAM,aAAa;QAEjD,kDAAkD;QAClD,4DAA4D;QAE5D,iCAAiC;QACjC,IAAI;YACA,QAAQ,GAAG,CAAC,yBAAyB,OAAO,WAAW,CAAC,SAAS,OAAO;YACxE,iFAAiF;YAEjF,WAAW;YAEX,4CAA4C;YAC5C,MAAM,MAAM,CAAC,KAAK;YAElB,2CAA2C;YAC3C,WAAW;gBACP,OAAO,QAAQ,CAAC,IAAI,GAAG;YAC3B,GAAG;QAEP,EAAE,OAAO,KAAK;YACV,SAAS,IAAI,OAAO,IAAI;QAC5B;IACJ;IAEA,qBACI,6LAAC;QAAK,UAAU;QAAc,WAAU;;0BAEpC,6LAAC;;kCACG,6LAAC;wBAAM,SAAQ;wBAAS,WAAU;kCAA0C;;;;;;kCAC5E,6LAAC;wBACG,MAAK;wBACL,MAAK;wBACL,IAAG;wBACH,QAAQ;wBACR,WAAU;wBACV,aAAY;;;;;;;;;;;;0BAKpB,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;;0CACG,6LAAC;gCAAM,SAAQ;gCAAU,WAAU;0CAA0C;;;;;;0CAC7E,6LAAC;gCAAM,MAAK;gCAAO,MAAK;gCAAU,IAAG;gCAAU,QAAQ;gCAAC,WAAU;gCAA0B,aAAY;;;;;;;;;;;;kCAE5G,6LAAC;;0CACG,6LAAC;gCAAM,SAAQ;gCAAO,WAAU;0CAA0C;;;;;;0CAC1E,6LAAC;gCAAM,MAAK;gCAAO,MAAK;gCAAO,IAAG;gCAAO,QAAQ;gCAAC,WAAU;gCAA0B,aAAY;;;;;;;;;;;;;;;;;;0BAK1G,6LAAC;;kCACG,6LAAC;wBAAM,SAAQ;wBAAkB,WAAU;kCAA0C;;;;;;kCACrF,6LAAC;wBACG,MAAK;wBACL,MAAK;wBACL,IAAG;wBACH,QAAQ;wBACR,WAAU;;;;;;;;;;;;YAKjB,uBAAS,6LAAC;gBAAE,WAAU;0BAAkD;;;;;;YACxE,yBAAW,6LAAC;gBAAE,WAAU;0BAAsD;;;;;;0BAG/E,6LAAC;0BACG,cAAA,6LAAC;oBACG,MAAK;oBACL,WAAU;8BACb;;;;;;;;;;;;;;;;;AAMjB;GAzFwB;KAAA","debugId":null}}]
}