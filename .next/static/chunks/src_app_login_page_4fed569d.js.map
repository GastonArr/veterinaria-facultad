{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/login/page.js"],"sourcesContent":["\n'use client';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { GoogleReCaptchaProvider, useGoogleReCaptcha } from 'react-google-recaptcha-v3';\n\n// Iconos para el toggle de la contraseña\nconst EyeIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z\" />\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n    </svg>\n);\n\nconst EyeSlashIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.243 4.243L6.228 6.228\" />\n    </svg>\n);\n\n\nconst LoginForm = () => {\n    const { currentUser, loginWithGoogle, loginWithEmail, registerWithEmailAndPassword, resetPassword } = useAuth();\n    const { executeRecaptcha } = useGoogleReCaptcha();\n    const router = useRouter();\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [error, setError] = useState(null);\n    const [isRegistering, setIsRegistering] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n\n    const [formData, setFormData] = useState({\n        nombre: '',\n        apellido: '',\n        dni: '',\n        telefonoPrincipal: '',\n        telefonoSecundario: '',\n        direccion: '',\n        barrio: '',\n        nombreContactoEmergencia: '',\n        telefonoContactoEmergencia: '',\n    });\n\n    useEffect(() => {\n        if (currentUser) {\n            router.push('/');\n        }\n    }, [currentUser, router]);\n\n    const handleLoginWithGoogle = async () => {\n        try {\n            await loginWithGoogle();\n        } catch (error) {\n            console.error('Failed to login with Google', error);\n            setError('Fallo al iniciar sesión con Google');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(null);\n\n        if (!executeRecaptcha) {\n            setError(\"La verificación ReCaptcha no está lista. Inténtalo de nuevo en unos segundos.\");\n            return;\n        }\n\n        const recaptchaToken = await executeRecaptcha('auth_action');\n        // Aquí enviarías el token al backend para su validación, pero por ahora lo dejamos como prueba de concepto.\n        console.log(\"reCAPTCHA token:\", recaptchaToken);\n\n        if (isRegistering) {\n            // Lógica de Registro\n            if (password !== confirmPassword) {\n                setError(\"Las contraseñas no coinciden.\");\n                return;\n            }\n            if (password.length < 6) {\n                setError(\"La contraseña debe tener al menos 6 caracteres.\");\n                return;\n            }\n            try {\n                await registerWithEmailAndPassword(email, password, formData);\n            } catch (error) {\n                console.error('Failed to register', error);\n                setError('No se pudo crear la cuenta. Es posible que el email ya esté en uso.');\n            }\n        } else {\n            // Lógica de Login\n            try {\n                await loginWithEmail(email, password);\n            } catch (error) {\n                console.error('Failed to login', error);\n                setError('Email o contraseña incorrectos.');\n            }\n        }\n    };\n\n    const handlePasswordReset = async () => {\n        if (!email) {\n            setError(\"Por favor, ingresa tu email para restablecer la contraseña.\");\n            return;\n        }\n        setError(null);\n        try {\n            await resetPassword(email);\n            alert('Se ha enviado un correo para restablecer tu contraseña. Revisa tu bandeja de entrada.');\n        } catch (error) {\n            console.error('Failed to send password reset email', error);\n            setError('No se pudo enviar el correo de restablecimiento.');\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if ((name === 'dni' || name.includes('telefono')) && value && !/^[0-9]+$/.test(value)) {\n          return;\n        }\n        setFormData((prev) => ({ ...prev, [name]: value }));\n      };\n\n    const FormInput = ({ id, name, type, placeholder, value, onChange, required = false, pattern, maxLength, label, children }) => (\n        <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor={id}>\n                {label}\n            </label>\n            <div className=\"relative\">\n                <input\n                    className=\"shadow-sm appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent pr-10\"\n                    id={id}\n                    name={name}\n                    type={type}\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange}\n                    required={required}\n                    pattern={pattern}\n                    maxLength={maxLength}\n                />\n                {children}\n            </div>\n        </div>\n    );\n\n    return (\n        <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center items-center p-4\">\n            <div className=\"w-full max-w-md\">\n                <h1 className=\"text-4xl font-bold text-center mb-6 text-gray-800\">{isRegistering ? 'Crear una Cuenta' : 'Iniciar Sesión'}</h1>\n                \n                {error && <p className=\"bg-red-100 text-red-700 p-3 rounded-md mb-4 text-center\">{error}</p>}\n                \n                <div className=\"bg-white shadow-xl rounded-2xl px-8 pt-6 pb-8 mb-4\">\n                    <form onSubmit={handleSubmit}>\n                        <FormInput id=\"email\" name=\"email\" type=\"email\" label=\"Email\" placeholder=\"tu@email.com\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                        <FormInput \n                            id=\"password\" \n                            name=\"password\" \n                            type={showPassword ? 'text' : 'password'} \n                            label=\"Contraseña\" \n                            placeholder=\"••••••••••\" \n                            value={password} \n                            onChange={(e) => setPassword(e.target.value)} \n                            required\n                        >\n                            <button type=\"button\" onClick={() => setShowPassword(!showPassword)} className=\"absolute inset-y-0 right-0 px-3 flex items-center text-gray-500\">\n                                {showPassword ? <EyeSlashIcon /> : <EyeIcon />}\n                            </button>\n                        </FormInput>\n\n                        {isRegistering && (\n                             <FormInput \n                                id=\"confirmPassword\" \n                                name=\"confirmPassword\" \n                                type={showPassword ? 'text' : 'password'} \n                                label=\"Confirmar Contraseña\" \n                                placeholder=\"••••••••••\" \n                                value={confirmPassword} \n                                onChange={(e) => setConfirmPassword(e.target.value)} \n                                required\n                            />\n                        )}\n\n                        {isRegistering && (\n                            <>\n                                <hr className=\"my-6\" />\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                    <FormInput id=\"nombre\" name=\"nombre\" type=\"text\" label=\"Nombre\" placeholder=\"Juan\" value={formData.nombre} onChange={handleChange} required />\n                                    <FormInput id=\"apellido\" name=\"apellido\" type=\"text\" label=\"Apellido\" placeholder=\"Pérez\" value={formData.apellido} onChange={handleChange} required />\n                                </div>\n                                <FormInput id=\"dni\" name=\"dni\" type=\"tel\" label=\"DNI\" placeholder=\"Sin puntos ni espacios\" value={formData.dni} onChange={handleChange} required maxLength=\"8\" />\n                                <FormInput id=\"direccion\" name=\"direccion\" type=\"text\" label=\"Dirección\" placeholder=\"Av. Siempreviva 742\" value={formData.direccion} onChange={handleChange} required />\n                                <FormInput id=\"barrio\" name=\"barrio\" type=\"text\" label=\"Barrio\" placeholder=\"Springfield\" value={formData.barrio} onChange={handleChange} required />\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                    <FormInput id=\"telefonoPrincipal\" name=\"telefonoPrincipal\" type=\"tel\" label=\"Teléfono Principal\" placeholder=\"1122334455\" value={formData.telefonoPrincipal} onChange={handleChange} required />\n                                    <FormInput id=\"telefonoSecundario\" name=\"telefonoSecundario\" type=\"tel\" label=\"Teléfono Secundario\" placeholder=\"(Opcional)\" value={formData.telefonoSecundario} onChange={handleChange} />\n                                </div>\n                                \n                                <hr className=\"my-6\" />\n                                <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">Contacto de Emergencia</h3>\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                    <FormInput id=\"nombreContactoEmergencia\" name=\"nombreContactoEmergencia\" type=\"text\" label=\"Nombre\" placeholder=\"Jane Doe\" value={formData.nombreContactoEmergencia} onChange={handleChange} required />\n                                    <FormInput id=\"telefonoContactoEmergencia\" name=\"telefonoContactoEmergencia\" type=\"tel\" label=\"Teléfono\" placeholder=\"1188776655\" value={formData.telefonoContactoEmergencia} onChange={handleChange} required />\n                                </div>\n                            </>\n                        )}\n\n                        <div className=\"mt-6 flex items-center justify-between\">\n                            <button\n                                className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline transition-transform transform hover:scale-105\"\n                                type=\"submit\"\n                            >\n                                {isRegistering ? 'Registrarme' : 'Entrar'}\n                            </button>\n                            {!isRegistering && (\n                                <a\n                                    className=\"inline-block align-baseline font-bold text-sm text-blue-600 hover:text-blue-800 cursor-pointer\"\n                                    onClick={handlePasswordReset}\n                                >\n                                    ¿Olvidaste tu contraseña?\n                                </a>\n                            )}\n                        </div>\n                    </form>\n                    \n                    <div className=\"text-center mt-6\">\n                        <button\n                            onClick={() => { setIsRegistering(!isRegistering); setError(null); }}\n                            className=\"font-bold text-sm text-gray-600 hover:text-gray-800\"\n                        >\n                            {isRegistering ? '¿Ya tienes una cuenta? Inicia Sesión' : '¿No tienes cuenta? Regístrate'}\n                        </button>\n                    </div>\n\n                </div>\n\n                <div className=\"text-center\">\n                    <p className=\"text-gray-500 text-sm mb-4\">o</p>\n                    <button\n                        onClick={handleLoginWithGoogle}\n                        className=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-300 rounded-lg shadow-sm transition-all\"\n                    >\n                        <img src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\" alt=\"Google Logo\" className=\"h-5 w-auto inline-block mr-2 align-middle\"/>\n                        Continuar con Google\n                    </button>\n                </div>\n\n                <p className=\"text-center text-gray-500 text-xs mt-6\">\n                    This site is protected by reCAPTCHA and the Google\n                    <a href=\"https://policies.google.com/privacy\" className=\"text-blue-600\"> Privacy Policy</a> and\n                    <a href=\"https://policies.google.com/terms\" className=\"text-blue-600\"> Terms of Service</a> apply.\n                </p>\n\n            </div>\n        </div>\n    );\n}\n\nexport default function LoginPage() {\n    //Debes reemplazar \"YOUR_SITE_KEY\" con tu clave de sitio de reCAPTCHA\n    const siteKey = process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY || \"YOUR_SITE_KEY\";\n\n    return (\n        <GoogleReCaptchaProvider reCaptchaKey={siteKey}>\n            <LoginForm />\n        </GoogleReCaptchaProvider>\n    );\n}\n"],"names":[],"mappings":";;;;AAsQoB;;AApQpB;AACA;AACA;;;;;;;;AAHA;;;;;AAMA,yCAAyC;AACzC,MAAM,UAAU,kBACZ,6LAAC;QAAI,OAAM;QAA6B,MAAK;QAAO,SAAQ;QAAY,aAAa;QAAK,QAAO;QAAe,WAAU;;0BACtH,6LAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,GAAE;;;;;;0BACrD,6LAAC;gBAAK,eAAc;gBAAQ,gBAAe;gBAAQ,GAAE;;;;;;;;;;;;KAHvD;AAON,MAAM,eAAe,kBACjB,6LAAC;QAAI,OAAM;QAA6B,MAAK;QAAO,SAAQ;QAAY,aAAa;QAAK,QAAO;QAAe,WAAU;kBACtH,cAAA,6LAAC;YAAK,eAAc;YAAQ,gBAAe;YAAQ,GAAE;;;;;;;;;;;MAFvD;AAON,MAAM,YAAY;;IACd,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,cAAc,EAAE,4BAA4B,EAAE,aAAa,EAAE,GAAG,IAAA,4IAAO;IAC7G,MAAM,EAAE,gBAAgB,EAAE,GAAG;IAC7B,MAAM,SAAS,IAAA,kJAAS;IAExB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,yKAAQ,EAAC;IACvD,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAC;IACnC,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,yKAAQ,EAAC;IACnD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,yKAAQ,EAAC;IAEjD,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;QACrC,QAAQ;QACR,UAAU;QACV,KAAK;QACL,mBAAmB;QACnB,oBAAoB;QACpB,WAAW;QACX,QAAQ;QACR,0BAA0B;QAC1B,4BAA4B;IAChC;IAEA,IAAA,0KAAS;+BAAC;YACN,IAAI,aAAa;gBACb,OAAO,IAAI,CAAC;YAChB;QACJ;8BAAG;QAAC;QAAa;KAAO;IAExB,MAAM,wBAAwB;QAC1B,IAAI;YACA,MAAM;QACV,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,SAAS;QACb;IACJ;IAEA,MAAM,eAAe,OAAO;QACxB,EAAE,cAAc;QAChB,SAAS;QAET,IAAI,CAAC,kBAAkB;YACnB,SAAS;YACT;QACJ;QAEA,MAAM,iBAAiB,MAAM,iBAAiB;QAC9C,4GAA4G;QAC5G,QAAQ,GAAG,CAAC,oBAAoB;QAEhC,IAAI,eAAe;YACf,qBAAqB;YACrB,IAAI,aAAa,iBAAiB;gBAC9B,SAAS;gBACT;YACJ;YACA,IAAI,SAAS,MAAM,GAAG,GAAG;gBACrB,SAAS;gBACT;YACJ;YACA,IAAI;gBACA,MAAM,6BAA6B,OAAO,UAAU;YACxD,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,sBAAsB;gBACpC,SAAS;YACb;QACJ,OAAO;YACH,kBAAkB;YAClB,IAAI;gBACA,MAAM,eAAe,OAAO;YAChC,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,mBAAmB;gBACjC,SAAS;YACb;QACJ;IACJ;IAEA,MAAM,sBAAsB;QACxB,IAAI,CAAC,OAAO;YACR,SAAS;YACT;QACJ;QACA,SAAS;QACT,IAAI;YACA,MAAM,cAAc;YACpB,MAAM;QACV,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,uCAAuC;YACrD,SAAS;QACb;IACJ;IAEA,MAAM,eAAe,CAAC;QAClB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,IAAI,CAAC,SAAS,SAAS,KAAK,QAAQ,CAAC,WAAW,KAAK,SAAS,CAAC,WAAW,IAAI,CAAC,QAAQ;YACrF;QACF;QACA,YAAY,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAM,CAAC;IACnD;IAEF,MAAM,YAAY;YAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE;6BACtH,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAM,WAAU;oBAA6C,SAAS;8BAClE;;;;;;8BAEL,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BACG,WAAU;4BACV,IAAI;4BACJ,MAAM;4BACN,MAAM;4BACN,aAAa;4BACb,OAAO;4BACP,UAAU;4BACV,UAAU;4BACV,SAAS;4BACT,WAAW;;;;;;wBAEd;;;;;;;;;;;;;;IAKb,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAG,WAAU;8BAAqD,gBAAgB,qBAAqB;;;;;;gBAEvG,uBAAS,6LAAC;oBAAE,WAAU;8BAA2D;;;;;;8BAElF,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAK,UAAU;;8CACZ,6LAAC;oCAAU,IAAG;oCAAQ,MAAK;oCAAQ,MAAK;oCAAQ,OAAM;oCAAQ,aAAY;oCAAe,OAAO;oCAAO,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oCAAG,QAAQ;;;;;;8CAC1J,6LAAC;oCACG,IAAG;oCACH,MAAK;oCACL,MAAM,eAAe,SAAS;oCAC9B,OAAM;oCACN,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,QAAQ;8CAER,cAAA,6LAAC;wCAAO,MAAK;wCAAS,SAAS,IAAM,gBAAgB,CAAC;wCAAe,WAAU;kDAC1E,6BAAe,6LAAC;;;;qGAAkB,6LAAC;;;;;;;;;;;;;;;gCAI3C,+BACI,6LAAC;oCACE,IAAG;oCACH,MAAK;oCACL,MAAM,eAAe,SAAS;oCAC9B,OAAM;oCACN,aAAY;oCACZ,OAAO;oCACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;oCAClD,QAAQ;;;;;;gCAIf,+BACG;;sDACI,6LAAC;4CAAG,WAAU;;;;;;sDACd,6LAAC;4CAAI,WAAU;;8DACX,6LAAC;oDAAU,IAAG;oDAAS,MAAK;oDAAS,MAAK;oDAAO,OAAM;oDAAS,aAAY;oDAAO,OAAO,SAAS,MAAM;oDAAE,UAAU;oDAAc,QAAQ;;;;;;8DAC3I,6LAAC;oDAAU,IAAG;oDAAW,MAAK;oDAAW,MAAK;oDAAO,OAAM;oDAAW,aAAY;oDAAQ,OAAO,SAAS,QAAQ;oDAAE,UAAU;oDAAc,QAAQ;;;;;;;;;;;;sDAExJ,6LAAC;4CAAU,IAAG;4CAAM,MAAK;4CAAM,MAAK;4CAAM,OAAM;4CAAM,aAAY;4CAAyB,OAAO,SAAS,GAAG;4CAAE,UAAU;4CAAc,QAAQ;4CAAC,WAAU;;;;;;sDAC3J,6LAAC;4CAAU,IAAG;4CAAY,MAAK;4CAAY,MAAK;4CAAO,OAAM;4CAAY,aAAY;4CAAsB,OAAO,SAAS,SAAS;4CAAE,UAAU;4CAAc,QAAQ;;;;;;sDACtK,6LAAC;4CAAU,IAAG;4CAAS,MAAK;4CAAS,MAAK;4CAAO,OAAM;4CAAS,aAAY;4CAAc,OAAO,SAAS,MAAM;4CAAE,UAAU;4CAAc,QAAQ;;;;;;sDAClJ,6LAAC;4CAAI,WAAU;;8DACX,6LAAC;oDAAU,IAAG;oDAAoB,MAAK;oDAAoB,MAAK;oDAAM,OAAM;oDAAqB,aAAY;oDAAa,OAAO,SAAS,iBAAiB;oDAAE,UAAU;oDAAc,QAAQ;;;;;;8DAC7L,6LAAC;oDAAU,IAAG;oDAAqB,MAAK;oDAAqB,MAAK;oDAAM,OAAM;oDAAsB,aAAY;oDAAa,OAAO,SAAS,kBAAkB;oDAAE,UAAU;;;;;;;;;;;;sDAG/K,6LAAC;4CAAG,WAAU;;;;;;sDACd,6LAAC;4CAAG,WAAU;sDAA2C;;;;;;sDACzD,6LAAC;4CAAI,WAAU;;8DACX,6LAAC;oDAAU,IAAG;oDAA2B,MAAK;oDAA2B,MAAK;oDAAO,OAAM;oDAAS,aAAY;oDAAW,OAAO,SAAS,wBAAwB;oDAAE,UAAU;oDAAc,QAAQ;;;;;;8DACrM,6LAAC;oDAAU,IAAG;oDAA6B,MAAK;oDAA6B,MAAK;oDAAM,OAAM;oDAAW,aAAY;oDAAa,OAAO,SAAS,0BAA0B;oDAAE,UAAU;oDAAc,QAAQ;;;;;;;;;;;;;;8CAK1N,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CACG,WAAU;4CACV,MAAK;sDAEJ,gBAAgB,gBAAgB;;;;;;wCAEpC,CAAC,+BACE,6LAAC;4CACG,WAAU;4CACV,SAAS;sDACZ;;;;;;;;;;;;;;;;;;sCAOb,6LAAC;4BAAI,WAAU;sCACX,cAAA,6LAAC;gCACG,SAAS;oCAAQ,iBAAiB,CAAC;oCAAgB,SAAS;gCAAO;gCACnE,WAAU;0CAET,gBAAgB,yCAAyC;;;;;;;;;;;;;;;;;8BAMtE,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAC1C,6LAAC;4BACG,SAAS;4BACT,WAAU;;8CAEV,6LAAC;oCAAI,KAAI;oCAAqF,KAAI;oCAAc,WAAU;;;;;;gCAA6C;;;;;;;;;;;;;8BAK/K,6LAAC;oBAAE,WAAU;;wBAAyC;sCAElD,6LAAC;4BAAE,MAAK;4BAAsC,WAAU;sCAAgB;;;;;;wBAAmB;sCAC3F,6LAAC;4BAAE,MAAK;4BAAoC,WAAU;sCAAgB;;;;;;wBAAqB;;;;;;;;;;;;;;;;;;AAM/G;GA5OM;;QACoG,4IAAO;QAChF;QACd,kJAAS;;;MAHtB;AA8OS,SAAS;IACpB,qEAAqE;IACrE,MAAM,UAAU,2KAAO,CAAC,GAAG,CAAC,8BAA8B,IAAI;IAE9D,qBACI,6LAAC;QAAwB,cAAc;kBACnC,cAAA,6LAAC;;;;;;;;;;AAGb;MATwB","debugId":null}}]
}