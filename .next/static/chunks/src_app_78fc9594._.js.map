{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/actions.js"],"sourcesContent":["// Historia de Usuario 5: Gestión de Roles de Usuario\n// Historia de Usuario 6: Completar Perfil de Usuario\n\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\n\n/**\n * @constant aplicationRoles\n * @description Define roles especiales asignados a usuarios específicos según su DNI.\n * Esto centraliza la lógica de asignación de roles de administrador o empleado.\n * Corresponde a la \"Historia de Usuario 5: Gestión de Roles de Usuario\".\n */\nconst aplicationRoles = {\n  '00000001': 'admin',      // Magali - DNI sin puntos\n  '00000002': 'peluquera',\n  '00000003': 'transporte',\n};\n\n/**\n * @function completarPerfil\n * @description Server Action para guardar los datos del perfil de un usuario y asignarle un rol.\n * Se ejecuta después de que un usuario se registra exitosamente.\n * Corresponde a las \"Historias de Usuario 5 y 6\".\n * @param {string} userId - El ID del usuario de Firebase Authentication.\n * @param {object} userData - Los datos del perfil del formulario.\n */\nexport async function completarPerfil(userId, userData) {\n  const firestore = admin.firestore();\n  const auth = admin.auth();\n\n  const { \n    nombre, \n    apellido, \n    dni, \n    telefonoPrincipal, \n    telefonoSecundario, \n    direccion, \n    // barrio, // El campo barrio se ha comentado\n    nombreContactoEmergencia, \n    telefonoContactoEmergencia \n  } = userData;\n  \n  if (!userId || !nombre || !apellido || !dni || !telefonoPrincipal || !direccion || !nombreContactoEmergencia || !telefonoContactoEmergencia) {\n    console.error('Validation failed. Missing data:', { userId, ...userData });\n    return { success: false, error: 'Faltan datos esenciales para completar el perfil.' };\n  }\n\n  try {\n    // 1. Asignación de Rol (HU 5)\n    const userRole = aplicationRoles[dni] || 'dueño';\n    await auth.setCustomUserClaims(userId, { role: userRole });\n\n    // 2. Guardar Datos del Perfil en Firestore (HU 6)\n    await firestore.collection('users').doc(userId).set({\n      nombre,\n      apellido,\n      dni,\n      telefonoPrincipal,\n      telefonoSecundario: telefonoSecundario || '',\n      direccion,\n      // barrio, // El campo barrio se ha comentado\n      nombreContactoEmergencia,\n      telefonoContactoEmergencia,\n      role: userRole,\n      profileCompleted: true,\n      createdAt: admin.firestore.FieldValue.serverTimestamp(),\n    }, { merge: true });\n\n    revalidatePath('/');\n    \n    return { success: true, role: userRole };\n\n  } catch (error) {\n    console.error('Error al completar el perfil en el servidor:', error);\n    return { success: false, error: 'Ocurrió un error en el servidor al procesar tu perfil.' };\n  }\n}\n\n/**\n * Server Action para agregar una nueva mascota a un usuario.\n */\nexport async function agregarMascota(userId, mascotaData) {\n    if (!userId) {\n        return { success: false, error: 'Usuario no autenticado.' };\n    }\n\n    const { nombre, especie, raza, fechaNacimiento, tamaño, enAdopcion } = mascotaData;\n\n    if (!nombre || !especie || !raza || !fechaNacimiento || !tamaño) {\n        return { success: false, error: 'Todos los campos, incluyendo el tamaño, son obligatorios.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const mascotaRef = await firestore.collection('users').doc(userId).collection('mascotas').add({\n            nombre,\n            especie,\n            raza,\n            fechaNacimiento,\n            tamaño,\n            enAdopcion: enAdopcion || false, \n            createdAt: new Date(),\n        });\n\n        revalidatePath('/mascotas');\n\n        return { success: true, mascotaId: mascotaRef.id };\n\n    } catch (error) {\n        console.error('Error al agregar la mascota:', error);\n        return { success: false, error: 'No se pudo registrar la mascota en la base de datos.' };\n    }\n}\n\n/**\n * @function actualizarPerfil\n * @description Server Action para que un usuario actualice sus propios datos de perfil.\n * @param {string} userId - El ID del usuario de Firebase Authentication.\n * @param {object} userData - Los datos del perfil del formulario a actualizar.\n */\nexport async function actualizarPerfil(userId, userData) {\n  const firestore = admin.firestore();\n\n  const { \n    nombre, \n    apellido, \n    dni, \n    telefonoPrincipal, \n    telefonoSecundario, \n    direccion, \n    nombreContactoEmergencia, \n    telefonoContactoEmergencia \n  } = userData;\n  \n  // No incluimos 'barrio' en la validación ni en la actualización\n  if (!userId || !nombre || !apellido || !dni || !telefonoPrincipal || !direccion || !nombreContactoEmergencia || !telefonoContactoEmergencia) {\n    return { success: false, error: 'Faltan datos esenciales para actualizar el perfil.' };\n  }\n\n  try {\n    await firestore.collection('users').doc(userId).update({\n      nombre,\n      apellido,\n      dni,\n      telefonoPrincipal,\n      telefonoSecundario: telefonoSecundario || '',\n      direccion,\n      nombreContactoEmergencia,\n      telefonoContactoEmergencia,\n      updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n    });\n\n    revalidatePath('/mis-datos');\n    \n    return { success: true, message: '¡Perfil actualizado con éxito!' };\n\n  } catch (error) {\n    console.error('Error al actualizar el perfil en el servidor:', error);\n    return { success: false, error: 'Ocurrió un error en el servidor al actualizar tu perfil.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;;IA2HsB,mBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/SubHeader.jsx"],"sourcesContent":["'use client';\n\nimport { usePathname } from 'next/navigation';\nimport Link from 'next/link';\n\nexport default function SubHeader() {\n    const pathname = usePathname();\n\n    // Estilos para el enlace activo e inactivo\n    const baseStyle = \"px-4 py-2 text-sm font-medium text-gray-600 rounded-md hover:bg-gray-100 transition-colors duration-200\";\n    const activeStyle = `${baseStyle} bg-gray-200 text-gray-900 font-semibold`;\n\n    return (\n        <nav className=\"bg-white shadow-sm w-full\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                <div className=\"flex justify-center items-center h-16\">\n                    <div className=\"flex space-x-4\">\n                        {/* Se elimina el enlace a Inicio */}\n                        <Link href=\"/mis-datos\">\n                            <span className={pathname === '/mis-datos' ? activeStyle : baseStyle}>\n                                Mis Datos\n                            </span>\n                        </Link>\n                        <Link href=\"/mascotas\">\n                           <span className={pathname === '/mascotas' ? activeStyle : baseStyle}>\n                                Mis Mascotas\n                           </span>\n                        </Link>\n                        <Link href=\"/mis-turnos\">\n                            <span className={pathname === '/mis-turnos' ? activeStyle : baseStyle}>\n                                Mis Turnos\n                            </span>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACpB,MAAM,WAAW,IAAA,oJAAW;IAE5B,2CAA2C;IAC3C,MAAM,YAAY;IAClB,MAAM,cAAc,AAAC,GAAY,OAAV,WAAU;IAEjC,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;0BACX,cAAA,6LAAC;oBAAI,WAAU;;sCAEX,6LAAC,0KAAI;4BAAC,MAAK;sCACP,cAAA,6LAAC;gCAAK,WAAW,aAAa,eAAe,cAAc;0CAAW;;;;;;;;;;;sCAI1E,6LAAC,0KAAI;4BAAC,MAAK;sCACR,cAAA,6LAAC;gCAAK,WAAW,aAAa,cAAc,cAAc;0CAAW;;;;;;;;;;;sCAIxE,6LAAC,0KAAI;4BAAC,MAAK;sCACP,cAAA,6LAAC;gCAAK,WAAW,aAAa,gBAAgB,cAAc;0CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASnG;GAjCwB;;QACH,oJAAW;;;KADR","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/mis-datos/page.js"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport { actualizarPerfil } from '@/app/actions';\nimport SubHeader from '@/app/components/SubHeader';\nimport { FaUser, FaIdCard, FaPhone, FaMapMarkerAlt, FaExclamationTriangle, FaSave, FaEdit, FaTimes, FaKey } from 'react-icons/fa';\n\n// Componente para un campo de información, ahora con una prop `isEditable`\nconst InfoField = ({ label, value, icon, name, isEditing, onChange, isEditable = true }) => {\n    const Icon = icon;\n    const canEdit = isEditing && isEditable;\n\n    return (\n        <div className=\"flex items-center mb-4 bg-gray-50 p-3 rounded-lg\">\n            <Icon className={`mr-4 ${canEdit ? 'text-blue-500' : 'text-gray-400'}`} size={20} />\n            <div className=\"flex-grow\">\n                <label className=\"block text-xs font-semibold text-gray-500 mb-1\">{label}</label>\n                {canEdit ? (\n                    <input\n                        type={name.includes('telefono') || name === 'dni' ? 'tel' : 'text'}\n                        name={name}\n                        value={value}\n                        onChange={onChange}\n                        className=\"w-full text-lg text-gray-800 bg-white border-b-2 border-blue-300 focus:outline-none focus:border-blue-500 transition\"\n                        maxLength={name === 'dni' ? 8 : undefined}\n                    />\n                ) : (\n                    <p className={`text-lg ${isEditable ? 'text-gray-800' : 'text-gray-500'}`}>{value || (isEditable ? 'No especificado' : 'No modificable')}</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\n// Componente para mostrar notificaciones\nconst Notification = ({ message, type, onClose }) => {\n    if (!message) return null;\n    const baseClasses = \"p-4 rounded-lg flex justify-between items-center mb-4 shadow-lg\";\n    const typeClasses = type === 'success' ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\";\n    return (\n        <div className={`${baseClasses} ${typeClasses}`}>\n            <span>{message}</span>\n            <button onClick={onClose} className=\"text-xl font-bold\">&times;</button>\n        </div>\n    );\n};\n\nexport default function MisDatosPage() {\n    const { user, resetPassword } = useAuth();\n    const [userData, setUserData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [isEditing, setIsEditing] = useState(false);\n    const [formData, setFormData] = useState({});\n    const [notification, setNotification] = useState({ message: '', type: '' });\n\n    useEffect(() => {\n        if (user) {\n            const fetchUserData = async () => {\n                try {\n                    const docRef = doc(db, 'users', user.uid);\n                    const docSnap = await getDoc(docRef);\n                    if (docSnap.exists()) {\n                        const data = docSnap.data();\n                        setUserData(data);\n                        setFormData(data);\n                    } else {\n                        setNotification({ message: 'No se pudieron cargar tus datos.', type: 'error' });\n                    }\n                } catch (error) {\n                    setNotification({ message: 'Error al conectar con la base de datos.', type: 'error' });\n                } finally {\n                    setLoading(false);\n                }\n            };\n            fetchUserData();\n        }\n    }, [user]);\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        if ((name === 'dni' || name.includes('telefono')) && value && !/^[0-9]*$/.test(value)) return;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setNotification({ message: '', type: '' });\n        const result = await actualizarPerfil(user.uid, formData);\n        if (result.success) {\n            // Actualizamos la vista solo con los datos que pueden cambiar\n            const updatedViewData = { ...userData, ...result.updatedData };\n            setUserData(updatedViewData);\n            setFormData(updatedViewData);\n            setIsEditing(false);\n            setNotification({ message: result.message, type: 'success' });\n        } else {\n            setNotification({ message: result.error, type: 'error' });\n        }\n    };\n\n    const handlePasswordReset = async () => {\n        if (!user || !user.email) {\n            setNotification({ message: 'No se pudo identificar tu correo electrónico.', type: 'error' });\n            return;\n        }\n        try {\n            await resetPassword(user.email);\n            setNotification({ message: '¡Correo enviado! Revisa tu bandeja de entrada.', type: 'success' });\n        } catch (error) {\n            setNotification({ message: 'No se pudo enviar el correo de restablecimiento.', type: 'error' });\n        }\n    };\n\n    if (loading) {\n        return <div className=\"text-center mt-10\">Cargando tus datos...</div>;\n    }\n\n    if (!userData) {\n        return <div className=\"text-center mt-10 text-red-500\">No se pudieron cargar los datos del perfil.</div>;\n    }\n\n    return (\n        <>\n            <SubHeader title=\"Mis Datos\" />\n            <main className=\"max-w-4xl mx-auto p-4 md:p-8\">\n                <Notification message={notification.message} type={notification.type} onClose={() => setNotification({ message: '', type: '' })} />\n\n                <form onSubmit={handleSubmit}>\n                    <div className=\"bg-white shadow-xl rounded-2xl p-6 mb-8\">\n                        <div className=\"flex justify-between items-center mb-6\">\n                            <h2 className=\"text-2xl font-bold text-gray-800\">Información Personal</h2>\n                            {!isEditing ? (\n                                <button type=\"button\" onClick={() => setIsEditing(true)} className=\"flex items-center bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition\">\n                                    <FaEdit className=\"mr-2\" /> Editar\n                                </button>\n                            ) : (\n                                <div className=\"space-x-2\">\n                                    <button type=\"submit\" className=\"flex items-center bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition\">\n                                        <FaSave className=\"mr-2\" /> Guardar\n                                    </button>\n                                    <button type=\"button\" onClick={() => { setIsEditing(false); setFormData(userData); }} className=\"flex items-center bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-600 transition\">\n                                        <FaTimes className=\"mr-2\" /> Cancelar\n                                    </button>\n                                </div>\n                            )}\n                        </div>\n                        \n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-x-8\">\n                            <InfoField label=\"Nombre\" value={formData.nombre} icon={FaUser} name=\"nombre\" isEditing={isEditing} onChange={handleInputChange} isEditable={false} />\n                            <InfoField label=\"Apellido\" value={formData.apellido} icon={FaUser} name=\"apellido\" isEditing={isEditing} onChange={handleInputChange} isEditable={false} />\n                            <InfoField label=\"DNI\" value={formData.dni} icon={FaIdCard} name=\"dni\" isEditing={isEditing} onChange={handleInputChange} isEditable={false} />\n                            <InfoField label=\"Dirección\" value={formData.direccion} icon={FaMapMarkerAlt} name=\"direccion\" isEditing={isEditing} onChange={handleInputChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"bg-white shadow-xl rounded-2xl p-6\">\n                         <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Información de Contacto</h2>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-x-8\">\n                            <InfoField label=\"Teléfono Principal\" value={formData.telefonoPrincipal} icon={FaPhone} name=\"telefonoPrincipal\" isEditing={isEditing} onChange={handleInputChange} />\n                            <InfoField label=\"Teléfono Secundario\" value={formData.telefonoSecundario} icon={FaPhone} name=\"telefonoSecundario\" isEditing={isEditing} onChange={handleInputChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"bg-white shadow-xl rounded-2xl p-6 mt-8\">\n                        <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Contacto de Emergencia</h2>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-x-8\">\n                            <InfoField label=\"Nombre de Contacto\" value={formData.nombreContactoEmergencia} icon={FaExclamationTriangle} name=\"nombreContactoEmergencia\" isEditing={isEditing} onChange={handleInputChange} />\n                            <InfoField label=\"Teléfono de Emergencia\" value={formData.telefonoContactoEmergencia} icon={FaPhone} name=\"telefonoContactoEmergencia\" isEditing={isEditing} onChange={handleInputChange} />\n                        </div>\n                    </div>\n                </form>\n\n                <div className=\"bg-white shadow-xl rounded-2xl p-6 mt-8\">\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-6\">Seguridad de la Cuenta</h2>\n                    <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"mb-4 sm:mb-0\">\n                            <p className=\"text-lg text-gray-800 font-medium\">Cambiar Contraseña</p>\n                            <p className=\"text-sm text-gray-500 max-w-prose\">Te enviaremos un enlace seguro a tu correo para que puedas establecer una nueva contraseña.</p>\n                        </div>\n                        <button onClick={handlePasswordReset} className={`flex items-center text-white py-2 px-4 rounded-lg transition whitespace-nowrap ${isEditing ? 'bg-gray-400 cursor-not-allowed' : 'bg-red-500 hover:bg-red-600'}`} disabled={isEditing}>\n                            <FaKey className=\"mr-2\" /> Enviar enlace\n                        </button>\n                    </div>\n                </div>\n            </main>\n        </>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}