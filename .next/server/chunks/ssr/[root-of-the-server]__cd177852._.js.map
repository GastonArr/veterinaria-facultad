{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/lib/firebaseAdmin.js"],"sourcesContent":["\nimport admin from 'firebase-admin';\n\n\nif (!admin.apps.length) {\n  try {\n    admin.initializeApp();\n  } catch (error) {\n    console.error('Error en la inicialización de Firebase Admin SDK:', error);\n  }\n}\n\n/**\n * Verifica la cookie de sesión de Firebase y devuelve el UID del usuario.\n * @param {string} sessionCookie La cadena de la cookie de sesión.\n * @returns {Promise<string|null>} El UID del usuario o null si la cookie no es válida.\n */\nexport async function getUserIdFromSession(sessionCookie) {\n  if (!sessionCookie) {\n    return null;\n  }\n  try {\n    const decodedClaims = await admin.auth().verifySessionCookie(sessionCookie, true);\n    return decodedClaims.uid;\n  } catch (error) {\n    console.error('Error al verificar la cookie de sesión:', error.code);\n    return null;\n  }\n}\n\n\nexport default admin;\n"],"names":[],"mappings":";;;;;;AACA;;AAGA,IAAI,CAAC,sIAAK,CAAC,IAAI,CAAC,MAAM,EAAE;IACtB,IAAI;QACF,sIAAK,CAAC,aAAa;IACrB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qDAAqD;IACrE;AACF;AAOO,eAAe,qBAAqB,aAAa;IACtD,IAAI,CAAC,eAAe;QAClB,OAAO;IACT;IACA,IAAI;QACF,MAAM,gBAAgB,MAAM,sIAAK,CAAC,IAAI,GAAG,mBAAmB,CAAC,eAAe;QAC5E,OAAO,cAAc,GAAG;IAC1B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2CAA2C,MAAM,IAAI;QACnE,OAAO;IACT;AACF;uCAGe,sIAAK","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/actions.js"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\n\nconst aplicationRoles = {\n  '00000001': 'admin',      // Magali - DNI sin puntos\n  '00000002': 'peluquera',\n  '00000003': 'transporte',\n};\n\nexport async function completarPerfil(userId, userData) {\n  const firestore = admin.firestore();\n  const auth = admin.auth();\n\n  // Campos que vienen del formulario de registro\n  const { \n    nombre, \n    apellido, \n    dni, \n    telefonoPrincipal, \n    telefonoSecundario, \n    direccion, \n    barrio, \n    nombreContactoEmergencia, \n    telefonoContactoEmergencia \n  } = userData;\n  \n  // Validación con los campos correctos\n  if (!userId || !nombre || !apellido || !dni || !telefonoPrincipal || !direccion || !barrio || !nombreContactoEmergencia || !telefonoContactoEmergencia) {\n    console.error('Validation failed. Missing data:', { userId, ...userData });\n    return { success: false, error: 'Faltan datos esenciales para completar el perfil.' };\n  }\n\n  try {\n    // Asignar rol. Si el DNI está en la lista, se le da un rol especial.\n    const userRole = aplicationRoles[dni] || 'dueño';\n\n    // 1. Asignar el \"custom claim\" para el rol de usuario en Authentication\n    await auth.setCustomUserClaims(userId, { role: userRole });\n\n    // 2. Guardar todos los datos del perfil en la base de datos Firestore\n    await firestore.collection('users').doc(userId).set({\n      nombre,\n      apellido,\n      dni,\n      telefonoPrincipal,\n      telefonoSecundario: telefonoSecundario || '', // Guardar aunque esté vacío\n      direccion,\n      barrio,\n      nombreContactoEmergencia,\n      telefonoContactoEmergencia,\n      role: userRole,\n      profileCompleted: true,\n      createdAt: admin.firestore.FieldValue.serverTimestamp(), // Buena práctica\n    }, { merge: true }); // Merge true para no sobrescribir datos si ya existía el doc.\n\n    // Invalidar caché para que los cambios se reflejen si es necesario\n    revalidatePath('/');\n    \n    return { success: true, role: userRole };\n\n  } catch (error) {\n    console.error('Error al completar el perfil en el servidor:', error);\n    // Devolver un error genérico para no exponer detalles de implementación\n    return { success: false, error: 'Ocurrió un error en el servidor al procesar tu perfil.' };\n  }\n}\n\n/**\n * Server Action para agregar una nueva mascota a un usuario.\n */\nexport async function agregarMascota(userId, mascotaData) {\n    if (!userId) {\n        return { success: false, error: 'Usuario no autenticado.' };\n    }\n\n    const { nombre, especie, raza, fechaNacimiento, tamaño, enAdopcion } = mascotaData;\n\n    if (!nombre || !especie || !raza || !fechaNacimiento || !tamaño) {\n        return { success: false, error: 'Todos los campos, incluyendo el tamaño, son obligatorios.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const mascotaRef = await firestore.collection('users').doc(userId).collection('mascotas').add({\n            nombre,\n            especie,\n            raza,\n            fechaNacimiento,\n            tamaño,\n            enAdopcion: enAdopcion || false, \n            createdAt: new Date(),\n        });\n\n        revalidatePath('/mascotas');\n\n        return { success: true, mascotaId: mascotaRef.id };\n\n    } catch (error) {\n        console.error('Error al agregar la mascota:', error);\n        return { success: false, error: 'No se pudo registrar la mascota en la base de datos.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAGA;AACA;;;;;;AAEA,MAAM,kBAAkB;IACtB,YAAY;IACZ,YAAY;IACZ,YAAY;AACd;AAEO,eAAe,gBAAgB,MAAM,EAAE,QAAQ;IACpD,MAAM,YAAY,sIAAK,CAAC,SAAS;IACjC,MAAM,OAAO,sIAAK,CAAC,IAAI;IAEvB,+CAA+C;IAC/C,MAAM,EACJ,MAAM,EACN,QAAQ,EACR,GAAG,EACH,iBAAiB,EACjB,kBAAkB,EAClB,SAAS,EACT,MAAM,EACN,wBAAwB,EACxB,0BAA0B,EAC3B,GAAG;IAEJ,sCAAsC;IACtC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,qBAAqB,CAAC,aAAa,CAAC,UAAU,CAAC,4BAA4B,CAAC,4BAA4B;QACtJ,QAAQ,KAAK,CAAC,oCAAoC;YAAE;YAAQ,GAAG,QAAQ;QAAC;QACxE,OAAO;YAAE,SAAS;YAAO,OAAO;QAAoD;IACtF;IAEA,IAAI;QACF,qEAAqE;QACrE,MAAM,WAAW,eAAe,CAAC,IAAI,IAAI;QAEzC,wEAAwE;QACxE,MAAM,KAAK,mBAAmB,CAAC,QAAQ;YAAE,MAAM;QAAS;QAExD,sEAAsE;QACtE,MAAM,UAAU,UAAU,CAAC,SAAS,GAAG,CAAC,QAAQ,GAAG,CAAC;YAClD;YACA;YACA;YACA;YACA,oBAAoB,sBAAsB;YAC1C;YACA;YACA;YACA;YACA,MAAM;YACN,kBAAkB;YAClB,WAAW,sIAAK,CAAC,SAAS,CAAC,UAAU,CAAC,eAAe;QACvD,GAAG;YAAE,OAAO;QAAK,IAAI,8DAA8D;QAEnF,mEAAmE;QACnE,IAAA,+IAAc,EAAC;QAEf,OAAO;YAAE,SAAS;YAAM,MAAM;QAAS;IAEzC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gDAAgD;QAC9D,wEAAwE;QACxE,OAAO;YAAE,SAAS;YAAO,OAAO;QAAyD;IAC3F;AACF;AAKO,eAAe,eAAe,MAAM,EAAE,WAAW;IACpD,IAAI,CAAC,QAAQ;QACT,OAAO;YAAE,SAAS;YAAO,OAAO;QAA0B;IAC9D;IAEA,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG;IAEvE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,mBAAmB,CAAC,QAAQ;QAC7D,OAAO;YAAE,SAAS;YAAO,OAAO;QAA4D;IAChG;IAEA,MAAM,YAAY,sIAAK,CAAC,SAAS;IAEjC,IAAI;QACA,MAAM,aAAa,MAAM,UAAU,UAAU,CAAC,SAAS,GAAG,CAAC,QAAQ,UAAU,CAAC,YAAY,GAAG,CAAC;YAC1F;YACA;YACA;YACA;YACA;YACA,YAAY,cAAc;YAC1B,WAAW,IAAI;QACnB;QAEA,IAAA,+IAAc,EAAC;QAEf,OAAO;YAAE,SAAS;YAAM,WAAW,WAAW,EAAE;QAAC;IAErD,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YAAE,SAAS;YAAO,OAAO;QAAuD;IAC3F;AACJ;;;IA7FsB;IA6DA;;AA7DA,+OAAA;AA6DA,+OAAA","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/actions/turnosActions.js"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\nimport { cookies } from 'next/headers';\nimport { getUserIdFromSession } from '@/lib/firebaseAdmin';\n\n// --- Lógica para Turnos de Peluquería ---\n\nconst MAX_PERROS_GRANDES_POR_DIA = 2;\nconst MAX_TURNOS_POR_TURNO_PELUQUERIA = 8;\n\nexport async function solicitarTurnoPeluqueria(turnoData) {\n    const { clienteId, mascotaId, fecha, turno, servicios, transporte, metodoPago } = turnoData;\n\n    if (!clienteId || !mascotaId || !fecha || !turno || !metodoPago) {\n        return { success: false, error: 'Faltan datos esenciales, incluido el método de pago.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const mascotaRef = firestore.collection('users').doc(clienteId).collection('mascotas').doc(mascotaId);\n        const mascotaSnap = await mascotaRef.get();\n\n        if (!mascotaSnap.exists) {\n            return { success: false, error: 'La mascota seleccionada no existe.' };\n        }\n        const tamañoMascota = mascotaSnap.data().tamaño;\n\n        const resultado = await firestore.runTransaction(async (transaction) => {\n            const turnosRef = firestore.collection('turnos');\n\n            if (tamañoMascota === 'grande') {\n                const qGrandes = turnosRef.where('fecha', '==', fecha).where('tipo', '==', 'peluqueria').where('tamañoMascota', '==', 'grande').where('estado', 'in', ['pendiente', 'confirmado']);\n                const snapGrandes = await transaction.get(qGrandes);\n                if (snapGrandes.docs.length >= MAX_PERROS_GRANDES_POR_DIA) {\n                    throw new Error('El cupo para perros grandes en esta fecha ya está completo.');\n                }\n            }\n            const qTurno = turnosRef.where('fecha', '==', fecha).where('turno', '==', turno).where('tipo', '==', 'peluqueria').where('estado', 'in', ['pendiente', 'confirmado']);\n            const snapTurno = await transaction.get(qTurno);\n            if (snapTurno.docs.length >= MAX_TURNOS_POR_TURNO_PELUQUERIA) {\n                throw new Error(`El turno de la ${turno} para esta fecha ya está completo.`);\n            }\n\n            const nuevoTurnoRef = firestore.collection('turnos').doc();\n            transaction.set(nuevoTurnoRef, {\n                ...turnoData,\n                tamañoMascota,\n                estado: 'pendiente',\n                createdAt: new Date().toISOString(),\n            });\n\n            return { success: true, turnoId: nuevoTurnoRef.id };\n        });\n\n        revalidatePath('/admin/turnos');\n        revalidatePath('/mis-turnos');\n        return resultado;\n\n    } catch (error) {\n        console.error('Error en la transacción de solicitud de turno de peluquería:', error);\n        return { success: false, error: error.message };\n    }\n}\n\n\n// --- Lógica para Turnos de Consulta ---\n\nexport async function solicitarTurnoConsulta(turnoData) {\n    // Añadimos 'metodoPago' a la desestructuración\n    const { clienteId, mascotaId, fecha, turno, motivo, metodoPago } = turnoData;\n\n    // Añadimos validación para el nuevo campo\n    if (!clienteId || !mascotaId || !fecha || !turno || !motivo || !metodoPago) {\n        return { success: false, error: 'Faltan datos esenciales, incluido el método de pago.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const nuevoTurnoRef = firestore.collection('turnos').doc();\n        \n        // El operador '...' se asegura de que 'metodoPago' se guarde en la BD\n        await nuevoTurnoRef.set({\n            ...turnoData,\n            tipo: 'consulta',\n            estado: 'pendiente',\n            createdAt: new Date().toISOString(),\n        });\n\n        revalidatePath('/admin/turnos');\n        revalidatePath('/mis-turnos');\n\n        return { success: true, turnoId: nuevoTurnoRef.id };\n\n    } catch (error) {\n        console.error('Error al solicitar el turno de consulta:', error);\n        return { success: false, error: 'Ocurrió un error inesperado al guardar la solicitud.' };\n    }\n}\n\n\n// --- LÓGICA DE CANCELACIÓN DE TURNO (PARA USUARIOS) ---\n\nexport async function cancelarTurnoUsuario(turnoId) {\n    const sessionCookie = cookies().get('__session')?.value || '';\n    const userId = await getUserIdFromSession(sessionCookie);\n\n    if (!userId) {\n        return { success: false, error: 'No estás autenticado.' };\n    }\n\n    if (!turnoId) {\n        return { success: false, error: 'No se proporcionó un ID de turno.' };\n    }\n\n    const firestore = admin.firestore();\n    const turnoRef = firestore.collection('turnos').doc(turnoId);\n\n    try {\n        const turnoSnap = await turnoRef.get();\n\n        if (!turnoSnap.exists) {\n            return { success: false, error: 'El turno no existe.' };\n        }\n\n        const turnoData = turnoSnap.data();\n\n        if (turnoData.clienteId !== userId) {\n            return { success: false, error: 'No tienes permiso para cancelar este turno.' };\n        }\n\n        if ([ 'cancelado', 'completado'].includes(turnoData.estado)) {\n            return { success: false, error: 'Este turno ya no se puede cancelar.' };\n        }\n\n        const hoy = new Date();\n        hoy.setHours(0, 0, 0, 0);\n        const fechaTurno = new Date(turnoData.fecha + 'T12:00:00'); \n\n        if (fechaTurno < hoy) {\n            return { success: false, error: 'No se puede cancelar un turno que ya ha pasado.' };\n        }\n\n        await turnoRef.update({\n            estado: 'cancelado',\n            canceladoAt: new Date().toISOString(),\n            canceladoPor: 'usuario'\n        });\n\n        revalidatePath('/mis-turnos');\n        revalidatePath('/admin/turnos');\n\n        return { success: true };\n\n    } catch (error) {\n        console.error('Error al cancelar el turno:', error);\n        return { success: false, error: 'Ocurrió un error inesperado al intentar cancelar el turno.' };\n    }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/.next-internal/server/app/turnos/peluqueria/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {completarPerfil as '6091545e0ff3735577794c80d201d16465bc00f7ee'} from 'ACTIONS_MODULE0'\nexport {solicitarTurnoPeluqueria as '408ab6792b0821f39cb07c2cc68899e7caf2810bd6'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/FormularioTurnoPeluqueria.jsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/FormularioTurnoPeluqueria.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/FormularioTurnoPeluqueria.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAoT,GACjV,kFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/FormularioTurnoPeluqueria.jsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/FormularioTurnoPeluqueria.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/FormularioTurnoPeluqueria.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/PrivateRoute.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/PrivateRoute.js <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/PrivateRoute.js <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 454, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/PrivateRoute.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/PrivateRoute.js from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/PrivateRoute.js\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/turnos/peluqueria/page.js"],"sourcesContent":["\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport admin from '@/lib/firebaseAdmin';\nimport { getUserIdFromSession } from '@/lib/firebaseAdmin';\n\nimport FormularioTurnoPeluqueria from '@/app/components/FormularioTurnoPeluqueria.jsx';\nimport PrivateRoute from '@/app/components/PrivateRoute';\n\n// --- LÓGICA DE DISPONIBILIDAD ---\n\n// 1. Definimos la capacidad máxima de turnos por franja horaria.\nconst MAX_TURNOS_MANANA = 5;\nconst MAX_TURNOS_TARDE = 5;\n\n// 2. Función para obtener la ocupación actual de los turnos.\nasync function getOcupacionTurnos() {\n    const firestore = admin.firestore();\n    const ocupacion = {}; // Objeto para guardar la cuenta: { 'YYYY-MM-DD': { manana: X, tarde: Y } }\n\n    try {\n        const hoy = new Date();\n        hoy.setHours(0, 0, 0, 0); // Empezar desde el inicio de hoy\n\n        const turnosSnap = await firestore.collection('turnos')\n            .where('fecha', '>=', hoy.toISOString().split('T')[0]) // Solo turnos de hoy en adelante\n            .where('estado', 'in', ['pendiente', 'confirmado']) // Solo contamos los que ocupan un lugar\n            .get();\n\n        turnosSnap.docs.forEach(doc => {\n            const turno = doc.data();\n            const fecha = turno.fecha;\n\n            if (!ocupacion[fecha]) {\n                ocupacion[fecha] = { manana: 0, tarde: 0 };\n            }\n\n            if (turno.turno === 'manana') {\n                ocupacion[fecha].manana += 1;\n            }\n            if (turno.turno === 'tarde') {\n                ocupacion[fecha].tarde += 1;\n            }\n        });\n\n        return ocupacion;\n    } catch (error) {\n        console.error(\"Error al calcular la ocupación de turnos:\", error);\n        return {}; // Devolver objeto vacío en caso de error\n    }\n}\n\n// 3. Función para calcular los días completamente deshabilitados\nfunction getDiasDeshabilitados(ocupacion) {\n    const disabledDays = [\n        { dayOfWeek: [0, 6] }, // Fines de semana\n        { before: new Date() } // Días pasados\n    ];\n\n    for (const fecha in ocupacion) {\n        if (ocupacion[fecha].manana >= MAX_TURNOS_MANANA && ocupacion[fecha].tarde >= MAX_TURNOS_TARDE) {\n            disabledDays.push(new Date(fecha + 'T12:00:00')); // Añadir día a la lista de deshabilitados\n        }\n    }\n    return disabledDays;\n}\n\n\n// --- FUNCIONES EXISTENTES (con saneamiento) ---\n\nconst sanitizeData = (docData) => {\n  if (!docData) return null;\n  const data = { ...docData };\n  for (const key in data) {\n    if (data[key] && typeof data[key].toDate === 'function') {\n      data[key] = data[key].toDate().toISOString();\n    }\n  }\n  return data;\n};\n\nasync function getUserMascotas(userId) {\n    if (!userId) return [];\n    const firestore = admin.firestore();\n    try {\n        const mascotasSnap = await firestore.collection('users').doc(userId).collection('mascotas').orderBy('nombre', 'asc').get();\n        return mascotasSnap.docs.map(doc => ({ id: doc.id, ...sanitizeData(doc.data()) }));\n    } catch (error) {\n        console.error(\"Error al obtener las mascotas:\", error);\n        return [];\n    }\n}\n\nexport default async function PeluqueriaPage() {\n    const sessionCookie = cookies().get('__session')?.value || '';\n    const userId = await getUserIdFromSession(sessionCookie);\n\n    if (!userId) {\n        redirect('/login');\n    }\n\n    // Obtenemos tanto las mascotas como la disponibilidad\n    const [mascotas, ocupacion] = await Promise.all([\n        getUserMascotas(userId),\n        getOcupacionTurnos()\n    ]);\n\n    const disabledDays = getDiasDeshabilitados(ocupacion);\n\n    if (mascotas.length === 0) {\n        // ... (código para cuando no hay mascotas, sin cambios)\n        return (\n             <PrivateRoute>\n                <main className=\"container mx-auto px-4 py-12 bg-gray-50 text-center\">\n                    <div className=\"max-w-xl mx-auto\">\n                        <h1 className=\"text-3xl font-bold text-gray-800 mb-4\">Primero registra a tu mascota</h1>\n                        <p className=\"text-gray-600 mb-6\">\n                            Para poder solicitar un turno de peluquería, primero necesitas tener al menos una mascota registrada en tu perfil.\n                        </p>\n                        <a href=\"/mascotas/nueva\" className=\"inline-block bg-violet-600 text-white font-semibold py-3 px-6 rounded-full hover:bg-violet-700 transition-colors\">\n                            Registrar una Mascota\n                        </a>\n                    </div>\n                </main>\n            </PrivateRoute>\n        );\n    }\n\n    // Pasamos todos los datos necesarios al formulario: mascotas y la lógica de disponibilidad.\n    return (\n        <PrivateRoute>\n            <main className=\"container mx-auto px-4 py-12 bg-gray-50\">\n                <div className=\"max-w-4xl mx-auto\">\n                    \n                    <FormularioTurnoPeluqueria \n                        mascotas={mascotas} \n                        ocupacion={ocupacion} \n                        disabledDays={disabledDays} \n                        maxTurnosManana={MAX_TURNOS_MANANA}\n                        maxTurnosTarde={MAX_TURNOS_TARDE}\n                    />\n                </div>\n            </main>\n        </PrivateRoute>\n    );\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;AAAA;AACA;AAGA;AACA;;;;;;;;AAEA,mCAAmC;AAEnC,iEAAiE;AACjE,MAAM,oBAAoB;AAC1B,MAAM,mBAAmB;AAEzB,6DAA6D;AAC7D,eAAe;IACX,MAAM,YAAY,sIAAK,CAAC,SAAS;IACjC,MAAM,YAAY,CAAC,GAAG,2EAA2E;IAEjG,IAAI;QACA,MAAM,MAAM,IAAI;QAChB,IAAI,QAAQ,CAAC,GAAG,GAAG,GAAG,IAAI,iCAAiC;QAE3D,MAAM,aAAa,MAAM,UAAU,UAAU,CAAC,UACzC,KAAK,CAAC,SAAS,MAAM,IAAI,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,iCAAiC;SACvF,KAAK,CAAC,UAAU,MAAM;YAAC;YAAa;SAAa,EAAE,wCAAwC;SAC3F,GAAG;QAER,WAAW,IAAI,CAAC,OAAO,CAAC,CAAA;YACpB,MAAM,QAAQ,IAAI,IAAI;YACtB,MAAM,QAAQ,MAAM,KAAK;YAEzB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBACnB,SAAS,CAAC,MAAM,GAAG;oBAAE,QAAQ;oBAAG,OAAO;gBAAE;YAC7C;YAEA,IAAI,MAAM,KAAK,KAAK,UAAU;gBAC1B,SAAS,CAAC,MAAM,CAAC,MAAM,IAAI;YAC/B;YACA,IAAI,MAAM,KAAK,KAAK,SAAS;gBACzB,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI;YAC9B;QACJ;QAEA,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,OAAO,CAAC,GAAG,yCAAyC;IACxD;AACJ;AAEA,iEAAiE;AACjE,SAAS,sBAAsB,SAAS;IACpC,MAAM,eAAe;QACjB;YAAE,WAAW;gBAAC;gBAAG;aAAE;QAAC;QACpB;YAAE,QAAQ,IAAI;QAAO,EAAE,eAAe;KACzC;IAED,IAAK,MAAM,SAAS,UAAW;QAC3B,IAAI,SAAS,CAAC,MAAM,CAAC,MAAM,IAAI,qBAAqB,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI,kBAAkB;YAC5F,aAAa,IAAI,CAAC,IAAI,KAAK,QAAQ,eAAe,0CAA0C;QAChG;IACJ;IACA,OAAO;AACX;AAGA,iDAAiD;AAEjD,MAAM,eAAe,CAAC;IACpB,IAAI,CAAC,SAAS,OAAO;IACrB,MAAM,OAAO;QAAE,GAAG,OAAO;IAAC;IAC1B,IAAK,MAAM,OAAO,KAAM;QACtB,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,YAAY;YACvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,WAAW;QAC5C;IACF;IACA,OAAO;AACT;AAEA,eAAe,gBAAgB,MAAM;IACjC,IAAI,CAAC,QAAQ,OAAO,EAAE;IACtB,MAAM,YAAY,sIAAK,CAAC,SAAS;IACjC,IAAI;QACA,MAAM,eAAe,MAAM,UAAU,UAAU,CAAC,SAAS,GAAG,CAAC,QAAQ,UAAU,CAAC,YAAY,OAAO,CAAC,UAAU,OAAO,GAAG;QACxH,OAAO,aAAa,IAAI,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;gBAAE,IAAI,IAAI,EAAE;gBAAE,GAAG,aAAa,IAAI,IAAI,GAAG;YAAC,CAAC;IACpF,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,EAAE;IACb;AACJ;AAEe,eAAe;IAC1B,MAAM,gBAAgB,IAAA,0IAAO,IAAG,GAAG,CAAC,cAAc,SAAS;IAC3D,MAAM,SAAS,MAAM,IAAA,mJAAoB,EAAC;IAE1C,IAAI,CAAC,QAAQ;QACT,IAAA,iMAAQ,EAAC;IACb;IAEA,sDAAsD;IACtD,MAAM,CAAC,UAAU,UAAU,GAAG,MAAM,QAAQ,GAAG,CAAC;QAC5C,gBAAgB;QAChB;KACH;IAED,MAAM,eAAe,sBAAsB;IAE3C,IAAI,SAAS,MAAM,KAAK,GAAG;QACvB,wDAAwD;QACxD,qBACK,8OAAC,mJAAY;sBACV,cAAA,8OAAC;gBAAK,WAAU;0BACZ,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAAwC;;;;;;sCACtD,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;sCAGlC,8OAAC;4BAAE,MAAK;4BAAkB,WAAU;sCAAmH;;;;;;;;;;;;;;;;;;;;;;IAO3K;IAEA,4FAA4F;IAC5F,qBACI,8OAAC,mJAAY;kBACT,cAAA,8OAAC;YAAK,WAAU;sBACZ,cAAA,8OAAC;gBAAI,WAAU;0BAEX,cAAA,8OAAC,iKAAyB;oBACtB,UAAU;oBACV,WAAW;oBACX,cAAc;oBACd,iBAAiB;oBACjB,gBAAgB;;;;;;;;;;;;;;;;;;;;;AAMxC","debugId":null}}]
}