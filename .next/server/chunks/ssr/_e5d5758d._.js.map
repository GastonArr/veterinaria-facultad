{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx","turbopack:///[project]/node_modules/next/src/shared/lib/encode-uri-path.ts","turbopack:///[project]/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx","turbopack:///[project]/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx","turbopack:///[project]/node_modules/next/src/shared/lib/app-dynamic.tsx","turbopack:///[project]/src/app/login/page.js","turbopack:///[project]/src/components/Modal.js"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n","export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n","'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n","import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n","import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n","'use client';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter } from 'next/navigation';\nimport { useEffect, useState, useRef, memo } from 'react';\nimport dynamic from 'next/dynamic';\nimport Image from 'next/image'; // Importar Image\nimport Modal from '@/components/Modal';\n\nconst ReCAPTCHA = dynamic(() => import('react-google-recaptcha'), { ssr: false });\n\nconst EyeIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z\" />\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n    </svg>\n);\n\nconst EyeSlashIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.243 4.243L6.228 6.228\" />\n    </svg>\n);\n\nconst FormInput = memo(({ id, name, type, placeholder, value, onChange, required = false, pattern, maxLength, label, children }) => (\n    <div className=\"mb-4\">\n        <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor={id}>{label}</label>\n        <div className=\"relative\">\n            <input\n                className=\"shadow-sm appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent pr-10\"\n                id={id} name={name} type={type} placeholder={placeholder} value={value}\n                onChange={onChange} required={required} pattern={pattern} maxLength={maxLength}\n            />\n            {children}\n        </div>\n    </div>\n));\nFormInput.displayName = 'FormInput';\n\n\nexport default function LoginPage() {\n    const { currentUser, loginWithGoogle, loginWithEmail, registerWithEmailAndPassword, resetPassword } = useAuth();\n    const router = useRouter();\n    const recaptchaRef = useRef();\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [error, setError] = useState(null);\n    const [isRegistering, setIsRegistering] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isClient, setIsClient] = useState(false);\n\n    const [formData, setFormData] = useState({\n        nombre: '',\n        apellido: '',\n        dni: '',\n        telefonoPrincipal: '',\n        telefonoSecundario: '',\n        direccion: '',\n        barrio: '',\n        nombreContactoEmergencia: '',\n        telefonoContactoEmergencia: '',\n    });\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n\n    useEffect(() => {\n        if (currentUser) {\n            router.push('/');\n        }\n    }, [currentUser, router]);\n\n    const handleLoginWithGoogle = async () => {\n        try {\n            await loginWithGoogle();\n        } catch (error) {\n            console.error('Failed to login with Google', error);\n            setError('Fallo al iniciar sesión con Google');\n        }\n    };\n    \n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n        setError(null);\n\n        if (isRegistering) {\n            if (password !== confirmPassword) {\n                return setError(\"Las contraseñas no coinciden.\");\n            }\n            if (password.length < 6) {\n                return setError(\"La contraseña debe tener al menos 6 caracteres.\");\n            }\n            setIsModalOpen(true);\n        } else {\n            try {\n                await loginWithEmail(email, password);\n            } catch (error) {\n                console.error('Failed to login', error);\n                setError('Email o contraseña incorrectos.');\n            }\n        }\n    };\n    \n    const handleFinalRegister = async () => {\n        if (!recaptchaRef.current) {\n             setError(\"El componente reCAPTCHA no está listo. Por favor, espera un segundo.\");\n             return;\n        }\n        const recaptchaToken = recaptchaRef.current.getValue();\n        if (!recaptchaToken) {\n            return setError(\"Por favor, verifica que no eres un robot.\");\n        }\n\n        try {\n            await registerWithEmailAndPassword(email, password, formData);\n            setIsModalOpen(false);\n        } catch (error) {\n            console.error('Failed to register', error);\n            setError('No se pudo crear la cuenta. Es posible que el email ya esté en uso.');\n            if (recaptchaRef.current) {\n                recaptchaRef.current.reset();\n            }\n            setIsModalOpen(false);\n        }\n    };\n\n    const handlePasswordReset = async () => {\n        if (!email) {\n            return setError(\"Por favor, ingresa tu email para restablecer la contraseña.\");\n        }\n        setError(null);\n        try {\n            await resetPassword(email);\n            alert('Se ha enviado un correo para restablecer tu contraseña. Revisa tu bandeja de entrada.');\n        } catch (error) {\n            console.error('Failed to send password reset email', error);\n            setError('No se pudo enviar el correo de restablecimiento.');\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if ((name === 'dni' || name.includes('telefono')) && value && !/^[0-9]+$/.test(value)) {\n          return;\n        }\n        setFormData((prev) => ({ ...prev, [name]: value }));\n      };\n\n    const siteKey = process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY || \"YOUR_SITE_KEY\";\n\n    return (\n        <>\n            <Modal isOpen={isModalOpen} onClose={() => setIsModalOpen(false)}>\n                <div className=\"text-center\">\n                    <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">Verificación de Seguridad</h2>\n                    <p className=\"text-gray-600 mb-6\">Como último paso, por favor, completa el desafío para confirmar que eres humano.</p>\n                    <div className=\"flex justify-center mb-6 h-[78px]\">\n                        {isClient && (\n                            <ReCAPTCHA ref={recaptchaRef} sitekey={siteKey} />\n                        )}\n                    </div>\n                    <button\n                        onClick={handleFinalRegister}\n                        className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-lg focus:outline-none focus:shadow-outline transition-transform transform hover:scale-105\"\n                    >\n                        Completar Registro\n                    </button>\n                </div>\n            </Modal>\n\n            <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center items-center p-4\">\n                <div className=\"w-full max-w-md\">\n                    <h1 className=\"text-4xl font-bold text-center mb-6 text-gray-800\">{isRegistering ? 'Crear una Cuenta' : 'Iniciar Sesión'}</h1>\n                    \n                    {error && <p className=\"bg-red-100 text-red-700 p-3 rounded-md mb-4 text-center\">{error}</p>}\n                    \n                    <div className=\"bg-white shadow-xl rounded-2xl px-8 pt-6 pb-8 mb-4\">\n                        <form onSubmit={handleFormSubmit}>\n                            <FormInput id=\"email\" name=\"email\" type=\"email\" label=\"Email\" placeholder=\"tu@email.com\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                            <FormInput \n                                id=\"password\" name=\"password\" type={showPassword ? 'text' : 'password'} label=\"Contraseña\" \n                                placeholder=\"••••••••••\" value={password} onChange={(e) => setPassword(e.target.value)} required\n                            >\n                                <button type=\"button\" onClick={() => setShowPassword(!showPassword)} className=\"absolute inset-y-0 right-0 px-3 flex items-center text-gray-500\">\n                                    {showPassword ? <EyeSlashIcon /> : <EyeIcon />}\n                                </button>\n                            </FormInput>\n\n                            {isRegistering && (\n                                <FormInput \n                                    id=\"confirmPassword\" name=\"confirmPassword\" type={showPassword ? 'text' : 'password'} \n                                    label=\"Confirmar Contraseña\" placeholder=\"••••••••••\" value={confirmPassword} \n                                    onChange={(e) => setConfirmPassword(e.target.value)} required\n                                />\n                            )}\n\n                            {isRegistering && (\n                                <>\n                                    <hr className=\"my-6\" />\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                        <FormInput id=\"nombre\" name=\"nombre\" type=\"text\" label=\"Nombre\" placeholder=\"Juan\" value={formData.nombre} onChange={handleChange} required />\n                                        <FormInput id=\"apellido\" name=\"apellido\" type=\"text\" label=\"Apellido\" placeholder=\"Pérez\" value={formData.apellido} onChange={handleChange} required />\n                                    </div>\n                                    <FormInput id=\"dni\" name=\"dni\" type=\"tel\" label=\"DNI\" placeholder=\"Sin puntos ni espacios\" value={formData.dni} onChange={handleChange} required maxLength=\"8\" />\n                                    <FormInput id=\"direccion\" name=\"direccion\" type=\"text\" label=\"Dirección\" placeholder=\"Av. Siempreviva 742\" value={formData.direccion} onChange={handleChange} required />\n                                    <FormInput id=\"barrio\" name=\"barrio\" type=\"text\" label=\"Barrio\" placeholder=\"Springfield\" value={formData.barrio} onChange={handleChange} required />\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                        <FormInput id=\"telefonoPrincipal\" name=\"telefonoPrincipal\" type=\"tel\" label=\"Teléfono Principal\" placeholder=\"1122334455\" value={formData.telefonoPrincipal} onChange={handleChange} required />\n                                        <FormInput id=\"telefonoSecundario\" name=\"telefonoSecundario\" type=\"tel\" label=\"Teléfono Secundario\" placeholder=\"(Opcional)\" value={formData.telefonoSecundario} onChange={handleChange} />\n                                    </div>\n                                    \n                                    <hr className=\"my-6\" />\n                                    <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">Contacto de Emergencia</h3>\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                        <FormInput id=\"nombreContactoEmergencia\" name=\"nombreContactoEmergencia\" type=\"text\" label=\"Nombre\" placeholder=\"Jane Doe\" value={formData.nombreContactoEmergencia} onChange={handleChange} required />\n                                        <FormInput id=\"telefonoContactoEmergencia\" name=\"telefonoContactoEmergencia\" type=\"tel\" label=\"Teléfono\" placeholder=\"1188776655\" value={formData.telefonoContactoEmergencia} onChange={handleChange} required />\n                                    </div>\n                                </>\n                            )}\n                            \n                            <div className=\"mt-6 flex items-center justify-between\">\n                                <button\n                                    className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline transition-transform transform hover:scale-105\"\n                                    type=\"submit\"\n                                >\n                                    {isRegistering ? 'Registrarme' : 'Entrar'}\n                                </button>\n                                {!isRegistering && (\n                                    <a\n                                        className=\"inline-block align-baseline font-bold text-sm text-blue-600 hover:text-blue-800 cursor-pointer\"\n                                        onClick={handlePasswordReset}\n                                    >\n                                        ¿Olvidaste tu contraseña?\n                                    </a>\n                                )}\n                            </div>\n                        </form>\n                        \n                        <div className=\"text-center mt-6\">\n                            <button\n                                onClick={() => { setIsRegistering(!isRegistering); setError(null); }}\n                                className=\"font-bold text-sm text-gray-600 hover:text-gray-800\"\n                            >\n                                {isRegistering ? '¿Ya tienes una cuenta? Inicia Sesión' : '¿No tienes cuenta? Regístrate'}\n                            </button>\n                        </div>\n\n                    </div>\n\n                    <div className=\"text-center\">\n                        <p className=\"text-gray-500 text-sm mb-4\">o</p>\n                        <button\n                            onClick={handleLoginWithGoogle}\n                            className=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-300 rounded-lg shadow-sm transition-all\"\n                        >\n                            <Image src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\" alt=\"Google Logo\" width={72} height={24} className=\"h-5 w-auto inline-block mr-2 align-middle\"/>\n                            Continuar con Google\n                        </button>\n                    </div>\n\n                </div>\n            </div>\n        </>\n    );\n}\n","'use client';\n\nimport { useEffect } from 'react';\n\n// Un componente de Modal genérico y reutilizable\nexport default function Modal({ isOpen, onClose, children }) {\n    useEffect(() => {\n        // Opcional: Cerrar el modal con la tecla Escape\n        const handleEsc = (event) => {\n            if (event.keyCode === 27) {\n                onClose();\n            }\n        };\n        window.addEventListener('keydown', handleEsc);\n\n        return () => {\n            window.removeEventListener('keydown', handleEsc);\n        };\n    }, [onClose]);\n\n    if (!isOpen) {\n        return null;\n    }\n\n    return (\n        <div \n            className=\"fixed inset-0 bg-black bg-opacity-60 z-50 flex justify-center items-center p-4\"\n            onClick={onClose} // Cierra el modal si se hace clic en el fondo\n        >\n            <div \n                className=\"bg-white rounded-2xl shadow-2xl p-8 max-w-lg w-full relative transform transition-all duration-300 ease-in-out scale-95 hover:scale-100\"\n                onClick={(e) => e.stopPropagation()} // Evita que el clic dentro del modal lo cierre\n            >\n                <button \n                    onClick={onClose} \n                    className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors\"\n                    aria-label=\"Cerrar modal\"\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n                {children}\n            </div>\n        </div>\n    );\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError","encodeURIPath","file","split","map","p","encodeURIComponent","join","PreloadChunks","moduleIds","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","dplId","process","env","NEXT_DEPLOYMENT_ID","chunk","href","assetPrefix","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority","convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","modules","displayName","dynamic","dynamicOptions","mergedOptions","loadableOptions","loadableGenerated"],"mappings":"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","ignoreList":[0,1,2,3,4]}