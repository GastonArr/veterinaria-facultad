{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/actions/turnosActions.js"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\nimport { cookies } from 'next/headers';\nimport { getUserIdFromSession } from '@/lib/firebaseAdmin';\n\n// --- Lógica para Turnos de Peluquería ---\n\nconst MAX_PERROS_GRANDES_POR_DIA = 2;\nconst MAX_TURNOS_POR_TURNO_PELUQUERIA = 8;\n\nexport async function solicitarTurnoPeluqueria(turnoData) {\n    const { clienteId, mascotaId, fecha, turno, servicios, transporte, metodoPago } = turnoData;\n\n    if (!clienteId || !mascotaId || !fecha || !turno || !metodoPago) {\n        return { success: false, error: 'Faltan datos esenciales, incluido el método de pago.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const mascotaRef = firestore.collection('users').doc(clienteId).collection('mascotas').doc(mascotaId);\n        const mascotaSnap = await mascotaRef.get();\n\n        if (!mascotaSnap.exists) {\n            return { success: false, error: 'La mascota seleccionada no existe.' };\n        }\n        const tamañoMascota = mascotaSnap.data().tamaño;\n\n        const resultado = await firestore.runTransaction(async (transaction) => {\n            const turnosRef = firestore.collection('turnos');\n\n            if (tamañoMascota === 'grande') {\n                const qGrandes = turnosRef.where('fecha', '==', fecha).where('tipo', '==', 'peluqueria').where('tamañoMascota', '==', 'grande').where('estado', 'in', ['pendiente', 'confirmado']);\n                const snapGrandes = await transaction.get(qGrandes);\n                if (snapGrandes.docs.length >= MAX_PERROS_GRANDES_POR_DIA) {\n                    throw new Error('El cupo para perros grandes en esta fecha ya está completo.');\n                }\n            }\n            const qTurno = turnosRef.where('fecha', '==', fecha).where('turno', '==', turno).where('tipo', '==', 'peluqueria').where('estado', 'in', ['pendiente', 'confirmado']);\n            const snapTurno = await transaction.get(qTurno);\n            if (snapTurno.docs.length >= MAX_TURNOS_POR_TURNO_PELUQUERIA) {\n                throw new Error(`El turno de la ${turno} para esta fecha ya está completo.`);\n            }\n\n            const nuevoTurnoRef = firestore.collection('turnos').doc();\n            transaction.set(nuevoTurnoRef, {\n                ...turnoData,\n                tamañoMascota,\n                estado: 'pendiente',\n                createdAt: new Date().toISOString(),\n            });\n\n            return { success: true, turnoId: nuevoTurnoRef.id };\n        });\n\n        revalidatePath('/admin/turnos');\n        revalidatePath('/mis-turnos');\n        return resultado;\n\n    } catch (error) {\n        console.error('Error en la transacción de solicitud de turno de peluquería:', error);\n        return { success: false, error: error.message };\n    }\n}\n\n\n// --- Lógica para Turnos de Consulta ---\n\nexport async function solicitarTurnoConsulta(turnoData) {\n    // Añadimos 'metodoPago' a la desestructuración\n    const { clienteId, mascotaId, fecha, turno, motivo, metodoPago } = turnoData;\n\n    // Añadimos validación para el nuevo campo\n    if (!clienteId || !mascotaId || !fecha || !turno || !motivo || !metodoPago) {\n        return { success: false, error: 'Faltan datos esenciales, incluido el método de pago.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const nuevoTurnoRef = firestore.collection('turnos').doc();\n        \n        // El operador '...' se asegura de que 'metodoPago' se guarde en la BD\n        await nuevoTurnoRef.set({\n            ...turnoData,\n            tipo: 'consulta',\n            estado: 'pendiente',\n            createdAt: new Date().toISOString(),\n        });\n\n        revalidatePath('/admin/turnos');\n        revalidatePath('/mis-turnos');\n\n        return { success: true, turnoId: nuevoTurnoRef.id };\n\n    } catch (error) {\n        console.error('Error al solicitar el turno de consulta:', error);\n        return { success: false, error: 'Ocurrió un error inesperado al guardar la solicitud.' };\n    }\n}\n\n\n// --- LÓGICA DE CANCELACIÓN DE TURNO (PARA USUARIOS) ---\n\nexport async function cancelarTurnoUsuario(turnoId) {\n    const sessionCookie = cookies().get('__session')?.value || '';\n    const userId = await getUserIdFromSession(sessionCookie);\n\n    if (!userId) {\n        return { success: false, error: 'No estás autenticado.' };\n    }\n\n    if (!turnoId) {\n        return { success: false, error: 'No se proporcionó un ID de turno.' };\n    }\n\n    const firestore = admin.firestore();\n    const turnoRef = firestore.collection('turnos').doc(turnoId);\n\n    try {\n        const turnoSnap = await turnoRef.get();\n\n        if (!turnoSnap.exists) {\n            return { success: false, error: 'El turno no existe.' };\n        }\n\n        const turnoData = turnoSnap.data();\n\n        if (turnoData.clienteId !== userId) {\n            return { success: false, error: 'No tienes permiso para cancelar este turno.' };\n        }\n\n        if ([ 'cancelado', 'completado'].includes(turnoData.estado)) {\n            return { success: false, error: 'Este turno ya no se puede cancelar.' };\n        }\n\n        const hoy = new Date();\n        hoy.setHours(0, 0, 0, 0);\n        const fechaTurno = new Date(turnoData.fecha + 'T12:00:00'); \n\n        if (fechaTurno < hoy) {\n            return { success: false, error: 'No se puede cancelar un turno que ya ha pasado.' };\n        }\n\n        await turnoRef.update({\n            estado: 'cancelado',\n            canceladoAt: new Date().toISOString(),\n            canceladoPor: 'usuario'\n        });\n\n        revalidatePath('/mis-turnos');\n        revalidatePath('/admin/turnos');\n\n        return { success: true };\n\n    } catch (error) {\n        console.error('Error al cancelar el turno:', error);\n        return { success: false, error: 'Ocurrió un error inesperado al intentar cancelar el turno.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAasB,2BAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/FormularioTurnoPeluqueria.jsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { DayPicker } from 'react-day-picker';\nimport 'react-day-picker/dist/style.css';\nimport { es } from 'date-fns/locale';\nimport { solicitarTurnoPeluqueria } from '@/app/actions/turnosActions';\nimport { FaMoneyBillWave, FaCreditCard } from 'react-icons/fa';\n\nexport default function FormularioTurnoPeluqueria({ \n    mascotas, \n    ocupacion, \n    disabledDays: initialDisabledDays, \n    maxTurnosManana,\n    maxTurnosTarde\n}) {\n    const { user } = useAuth();\n    const [mascota, setMascota] = useState('');\n    const [fecha, setFecha] = useState(null);\n    const [turno, setTurno] = useState('');\n    const [servicios, setServicios] = useState({ cepillado: false, rapado: false, corteTijera: false });\n    const [transporte, setTransporte] = useState(false);\n    const [metodoPago, setMetodoPago] = useState(''); // NUEVO ESTADO: para el método de pago\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const [isMananaDisabled, setMananaDisabled] = useState(false);\n    const [isTardeDisabled, setTardeDisabled] = useState(false);\n\n    const disabledDays = initialDisabledDays.map(day => {\n        if (typeof day === 'string') return new Date(day + 'T12:00:00');\n        return day;\n    });\n\n    useEffect(() => {\n        if (fecha) {\n            const fechaString = fecha.toISOString().split('T')[0];\n            const ocupacionDia = ocupacion[fechaString];\n            setMananaDisabled(ocupacionDia && ocupacionDia.manana >= maxTurnosManana);\n            setTardeDisabled(ocupacionDia && ocupacionDia.tarde >= maxTurnosTarde);\n            if ((turno === 'manana' && isMananaDisabled) || (turno === 'tarde' && isTardeDisabled)) setTurno('');\n        }\n    }, [fecha, ocupacion, maxTurnosManana, maxTurnosTarde, turno, isMananaDisabled, isTardeDisabled]);\n\n    const handleServicioChange = (e) => setServicios(prev => ({ ...prev, [e.target.name]: e.target.checked }));\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (!user || !mascota || !fecha || !turno || !metodoPago) { // Añadida validación para metodoPago\n            setError('Por favor, completa todos los campos, incluido el método de pago.');\n            return;\n        }\n        \n        setLoading(true);\n        setError('');\n        setSuccess('');\n\n        const servicesArray = Object.keys(servicios).filter(key => servicios[key]);\n        const selectedMascota = mascotas.find(m => m.id === mascota);\n\n        const turnoData = {\n            clienteId: user.uid,\n            mascotaId: mascota,\n            tamañoMascota: selectedMascota?.tamaño,\n            fecha: fecha.toISOString().split('T')[0],\n            turno,\n            servicios: servicesArray,\n            transporte,\n            metodoPago, \n            tipo: 'peluqueria',\n            // Otros campos a medida que crecen las vistas y se amplian las funcionalidades.\n        };\n\n        try {\n            const result = await solicitarTurnoPeluqueria(turnoData);\n            if (result.success) {\n                setSuccess('¡Solicitud de turno enviada con éxito! Nos pondremos en contacto para confirmar.');\n                setMascota(''); setFecha(null); setTurno(''); setTransporte(false); setMetodoPago(''); // Resetear metodoPago\n                setServicios({ cepillado: false, rapado: false, corteTijera: false });\n            } else {\n                setError(result.error || 'No se pudo procesar la solicitud.');\n            }\n        } catch (err) {\n            setError('Ocurrió un error inesperado.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className=\"max-w-xl mx-auto bg-white p-8 rounded-2xl shadow-xl space-y-7\">\n            <h2 className=\"text-2xl font-bold text-center text-gray-800\">Solicitar Turno de Peluquería</h2>\n\n            {error && <p className=\"text-sm text-red-600 bg-red-100 p-3 rounded-md text-center font-semibold\">{error}</p>}\n            {success && <p className=\"text-sm text-green-700 bg-green-100 p-3 rounded-md text-center font-semibold\">{success}</p>}\n\n            <div>\n                <label htmlFor=\"mascota\" className=\"block text-sm font-medium text-gray-700 mb-1\">Elige tu mascota</label>\n                <select id=\"mascota\" value={mascota} onChange={(e) => setMascota(e.target.value)} required className=\"w-full input\">\n                    <option value=\"\">Selecciona una mascota</option>\n                    {mascotas.map(m => <option key={m.id} value={m.id}>{m.nombre} ({m.tamaño})</option>)}\n                </select>\n            </div>\n\n            <div className=\"flex flex-col items-center\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">1. Selecciona el día</label>\n                <DayPicker mode=\"single\" selected={fecha} onSelect={setFecha} locale={es} disabled={disabledDays} className=\"bg-violet-50 p-4 rounded-lg\" modifiersClassNames={{ selected: 'bg-violet-600 text-white', today: 'text-violet-700 font-bold' }}/>\n            </div>\n            \n            <div>\n                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">2. Selecciona el turno disponible</label>\n                 <div className=\"grid grid-cols-2 gap-4\">\n                    <button type=\"button\" onClick={() => setTurno('manana')} disabled={isMananaDisabled || !fecha} className={`py-3 rounded-lg text-sm font-semibold transition-all duration-200 ${turno === 'manana' ? 'bg-violet-600 text-white shadow-lg ring-2 ring-violet-400' : 'bg-gray-200 text-gray-700'} ${isMananaDisabled || !fecha ? 'bg-gray-100 text-gray-400 cursor-not-allowed opacity-70' : 'hover:bg-violet-500 hover:text-white'}`}>\n                        Turno Mañana (8hs - 12hs)\n                    </button>\n                    <button type=\"button\" onClick={() => setTurno('tarde')} disabled={isTardeDisabled || !fecha} className={`py-3 rounded-lg text-sm font-semibold transition-all duration-200 ${turno === 'tarde' ? 'bg-violet-600 text-white shadow-lg ring-2 ring-violet-400' : 'bg-gray-200 text-gray-700'} ${isTardeDisabled || !fecha ? 'bg-gray-100 text-gray-400 cursor-not-allowed opacity-70' : 'hover:bg-violet-500 hover:text-white'}`}>\n                        Turno Tarde (13hs - 17hs)\n                    </button>\n                 </div>\n            </div>\n\n             <div>\n                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">3. Elige el método de pago</label>\n                 <div className=\"grid grid-cols-2 gap-4\">\n                    <button type=\"button\" onClick={() => setMetodoPago('efectivo')} className={`flex items-center justify-center py-3 rounded-lg text-sm font-semibold transition-all duration-200 ${metodoPago === 'efectivo' ? 'bg-green-500 text-white shadow-lg ring-2 ring-green-300' : 'bg-gray-200 text-gray-700'} hover:bg-green-400 hover:text-white`}>\n                        <FaMoneyBillWave className=\"mr-2\" />\n                        Efectivo\n                    </button>\n                    <button type=\"button\" onClick={() => setMetodoPago('mercado_pago')} className={`flex items-center justify-center py-3 rounded-lg text-sm font-semibold transition-all duration-200 ${metodoPago === 'mercado_pago' ? 'bg-sky-500 text-white shadow-lg ring-2 ring-sky-300' : 'bg-gray-200 text-gray-700'} hover:bg-sky-400 hover:text-white`}>\n                        <FaCreditCard className=\"mr-2\" />\n                        Mercado Pago\n                    </button>\n                 </div>\n            </div>\n\n             <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Servicios Adicionales (Opcional)</label>\n                <div className=\"space-y-2 bg-gray-50 p-4 rounded-lg\">\n                    <div className=\"flex items-center\">\n                        <input id=\"cepillado\" name=\"cepillado\" type=\"checkbox\" checked={servicios.cepillado} onChange={handleServicioChange} className=\"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\" />\n                        <label htmlFor=\"cepillado\" className=\"ml-3 block text-sm text-gray-800\">Cepillado</label>\n                    </div>\n                    <div className=\"flex items-center\">\n                        <input id=\"rapado\" name=\"rapado\" type=\"checkbox\" checked={servicios.rapado} onChange={handleServicioChange} className=\"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\" />\n                        <label htmlFor=\"rapado\" className=\"ml-3 block text-sm text-gray-800\">Rapado Parejo</label>\n                    </div>\n                    <div className=\"flex items-center\">\n                        <input id=\"corteTijera\" name=\"corteTijera\" type=\"checkbox\" checked={servicios.corteTijera} onChange={handleServicioChange} className=\"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\" />\n                        <label htmlFor=\"corteTijera\" className=\"ml-3 block text-sm text-gray-800\">Corte a Tijera</label>\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <div className=\"flex items-center bg-gray-50 p-4 rounded-lg\">\n                    <input id=\"transporte\" name=\"transporte\" type=\"checkbox\" checked={transporte} onChange={(e) => setTransporte(e.target.checked)} className=\"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\" />\n                    <label htmlFor=\"transporte\" className=\"ml-3 block text-sm font-medium text-gray-800\">¿Necesitas transporte? (Opcional)</label>\n                </div>\n            </div>\n\n            <button type=\"submit\" disabled={loading || !fecha || !turno || !mascota || !metodoPago} className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-full shadow-sm text-sm font-medium text-white bg-violet-600 hover:bg-violet-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500 disabled:bg-gray-400 disabled:cursor-not-allowed\">\n                {loading ? 'Enviando Solicitud...' : 'Solicitar Turno'}\n            </button>\n        </form>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/PrivateRoute.js"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\n\nexport default function PrivateRoute({ children }) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isProfileComplete, setIsProfileComplete] = useState(false);\n  const [checkingProfile, setCheckingProfile] = useState(true);\n\n  useEffect(() => {\n    if (loading) return;\n\n\n    if (!user) {\n      if (pathname !== '/login') {\n        router.push('/login');\n      }\n\n      setCheckingProfile(false);\n      return;\n    }\n\n    const checkUserProfile = async () => {\n      try {\n\n        const userDocRef = doc(db, 'users', user.uid);\n        const userDoc = await getDoc(userDocRef);\n        \n\n        if (userDoc.exists() && userDoc.data().profileCompleted) {\n          setIsProfileComplete(true);\n        } else {\n          setIsProfileComplete(false);\n          if (pathname !== '/completar-perfil') {\n            router.push('/completar-perfil');\n          }\n        }\n      } catch (error) {\n        console.error(\"Error al verificar el perfil:\", error);\n\n        setIsProfileComplete(false);\n        if (pathname !== '/completar-perfil') {\n          router.push('/completar-perfil');\n        }\n      } finally {\n        setCheckingProfile(false);\n      }\n    };\n\n    checkUserProfile();\n\n  }, [user, loading, router, pathname]);\n\n  \n  if (loading || checkingProfile) {\n    return <div>Cargando...</div>; \n  }\n\n  \n  if (!user && pathname === '/login'){\n    return children;\n  }\n\n\n  if (isProfileComplete) {\n    return children;\n  }\n  \n  \n  if (!isProfileComplete && pathname === '/completar-perfil') {\n    return children;\n  }\n\n \n  return null;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AANA;;;;;;;AAQe,SAAS,aAAa,EAAE,QAAQ,EAAE;IAC/C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,yIAAO;IACjC,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,WAAW,IAAA,iJAAW;IAC5B,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAAC;IAC3D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAC;IAEvD,IAAA,kNAAS,EAAC;QACR,IAAI,SAAS;QAGb,IAAI,CAAC,MAAM;YACT,IAAI,aAAa,UAAU;gBACzB,OAAO,IAAI,CAAC;YACd;YAEA,mBAAmB;YACnB;QACF;QAEA,MAAM,mBAAmB;YACvB,IAAI;gBAEF,MAAM,aAAa,IAAA,wKAAG,EAAC,4HAAE,EAAE,SAAS,KAAK,GAAG;gBAC5C,MAAM,UAAU,MAAM,IAAA,2KAAM,EAAC;gBAG7B,IAAI,QAAQ,MAAM,MAAM,QAAQ,IAAI,GAAG,gBAAgB,EAAE;oBACvD,qBAAqB;gBACvB,OAAO;oBACL,qBAAqB;oBACrB,IAAI,aAAa,qBAAqB;wBACpC,OAAO,IAAI,CAAC;oBACd;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,iCAAiC;gBAE/C,qBAAqB;gBACrB,IAAI,aAAa,qBAAqB;oBACpC,OAAO,IAAI,CAAC;gBACd;YACF,SAAU;gBACR,mBAAmB;YACrB;QACF;QAEA;IAEF,GAAG;QAAC;QAAM;QAAS;QAAQ;KAAS;IAGpC,IAAI,WAAW,iBAAiB;QAC9B,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAGA,IAAI,CAAC,QAAQ,aAAa,UAAS;QACjC,OAAO;IACT;IAGA,IAAI,mBAAmB;QACrB,OAAO;IACT;IAGA,IAAI,CAAC,qBAAqB,aAAa,qBAAqB;QAC1D,OAAO;IACT;IAGA,OAAO;AACT","debugId":null}}]
}