{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/login/page.js"],"sourcesContent":["\n'use client';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter } from 'next/navigation';\nimport { useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\n\n// Importar ReCAPTCHA de forma dinámica y deshabilitar el renderizado del lado del servidor (SSR)\nconst ReCAPTCHA = dynamic(() => import('react-google-recaptcha'), { ssr: false });\n\n// Iconos para el toggle de la contraseña (sin cambios)\nconst EyeIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z\" />\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n    </svg>\n);\n\nconst EyeSlashIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.243 4.243L6.228 6.228\" />\n    </svg>\n);\n\nexport default function LoginPage() {\n    const { currentUser, loginWithGoogle, loginWithEmail, registerWithEmailAndPassword, resetPassword } = useAuth();\n    const router = useRouter();\n    const recaptchaRef = useRef();\n    \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [error, setError] = useState(null);\n    const [isRegistering, setIsRegistering] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n\n    const [formData, setFormData] = useState({\n        nombre: '',\n        apellido: '',\n        dni: '',\n        telefonoPrincipal: '',\n        telefonoSecundario: '',\n        direccion: '',\n        barrio: '',\n        nombreContactoEmergencia: '',\n        telefonoContactoEmergencia: '',\n    });\n\n    useEffect(() => {\n        if (currentUser) {\n            router.push('/');\n        }\n    }, [currentUser, router]);\n\n    const handleLoginWithGoogle = async () => {\n        try {\n            await loginWithGoogle();\n        } catch (error) {\n            console.error('Failed to login with Google', error);\n            setError('Fallo al iniciar sesión con Google');\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(null);\n\n        if (isRegistering) {\n            const recaptchaToken = recaptchaRef.current.getValue();\n            if (!recaptchaToken) {\n                setError(\"Por favor, verifica que no eres un robot.\");\n                return;\n            }\n            // Lógica de Registro\n            if (password !== confirmPassword) {\n                setError(\"Las contraseñas no coinciden.\");\n                return;\n            }\n            if (password.length < 6) {\n                setError(\"La contraseña debe tener al menos 6 caracteres.\");\n                return;\n            }\n            try {\n                await registerWithEmailAndPassword(email, password, formData);\n            } catch (error) {\n                console.error('Failed to register', error);\n                setError('No se pudo crear la cuenta. Es posible que el email ya esté en uso.');\n                recaptchaRef.current.reset(); // Reiniciar el reCAPTCHA en caso de error\n            }\n        } else {\n            // Lógica de Login (sin reCAPTCHA aquí por simplicidad, pero se podría añadir)\n            try {\n                await loginWithEmail(email, password);\n            } catch (error) {\n                console.error('Failed to login', error);\n                setError('Email o contraseña incorrectos.');\n            }\n        }\n    };\n\n    const handlePasswordReset = async () => {\n        if (!email) {\n            setError(\"Por favor, ingresa tu email para restablecer la contraseña.\");\n            return;\n        }\n        setError(null);\n        try {\n            await resetPassword(email);\n            alert('Se ha enviado un correo para restablecer tu contraseña. Revisa tu bandeja de entrada.');\n        } catch (error) {\n            console.error('Failed to send password reset email', error);\n            setError('No se pudo enviar el correo de restablecimiento.');\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        if ((name === 'dni' || name.includes('telefono')) && value && !/^[0-9]+$/.test(value)) {\n          return;\n        }\n        setFormData((prev) => ({ ...prev, [name]: value }));\n      };\n\n    const FormInput = ({ id, name, type, placeholder, value, onChange, required = false, pattern, maxLength, label, children }) => (\n        <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor={id}>\n                {label}\n            </label>\n            <div className=\"relative\">\n                <input\n                    className=\"shadow-sm appearance-none border rounded w-full py-3 px-4 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent pr-10\"\n                    id={id}\n                    name={name}\n                    type={type}\n                    placeholder={placeholder}\n                    value={value}\n                    onChange={onChange}\n                    required={required}\n                    pattern={pattern}\n                    maxLength={maxLength}\n                />\n                {children}\n            </div>\n        </div>\n    );\n    // Debes reemplazar \"YOUR_SITE_KEY\" con tu clave de sitio de reCAPTCHA\n    const siteKey = process.env.NEXT_PUBLIC_RECAPTCHA_SITE_KEY || \"YOUR_SITE_KEY\";\n\n    return (\n        <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center items-center p-4\">\n            <div className=\"w-full max-w-md\">\n                <h1 className=\"text-4xl font-bold text-center mb-6 text-gray-800\">{isRegistering ? 'Crear una Cuenta' : 'Iniciar Sesión'}</h1>\n                \n                {error && <p className=\"bg-red-100 text-red-700 p-3 rounded-md mb-4 text-center\">{error}</p>}\n                \n                <div className=\"bg-white shadow-xl rounded-2xl px-8 pt-6 pb-8 mb-4\">\n                    <form onSubmit={handleSubmit}>\n                        <FormInput id=\"email\" name=\"email\" type=\"email\" label=\"Email\" placeholder=\"tu@email.com\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n                        <FormInput \n                            id=\"password\" \n                            name=\"password\" \n                            type={showPassword ? 'text' : 'password'} \n                            label=\"Contraseña\" \n                            placeholder=\"••••••••••\" \n                            value={password} \n                            onChange={(e) => setPassword(e.target.value)} \n                            required\n                        >\n                            <button type=\"button\" onClick={() => setShowPassword(!showPassword)} className=\"absolute inset-y-0 right-0 px-3 flex items-center text-gray-500\">\n                                {showPassword ? <EyeSlashIcon /> : <EyeIcon />}\n                            </button>\n                        </FormInput>\n\n                        {isRegistering && (\n                             <FormInput \n                                id=\"confirmPassword\" \n                                name=\"confirmPassword\" \n                                type={showPassword ? 'text' : 'password'} \n                                label=\"Confirmar Contraseña\" \n                                placeholder=\"••••••••••\" \n                                value={confirmPassword} \n                                onChange={(e) => setConfirmPassword(e.target.value)} \n                                required\n                            />\n                        )}\n\n                        {isRegistering && (\n                            <>\n                                <hr className=\"my-6\" />\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                    <FormInput id=\"nombre\" name=\"nombre\" type=\"text\" label=\"Nombre\" placeholder=\"Juan\" value={formData.nombre} onChange={handleChange} required />\n                                    <FormInput id=\"apellido\" name=\"apellido\" type=\"text\" label=\"Apellido\" placeholder=\"Pérez\" value={formData.apellido} onChange={handleChange} required />\n                                </div>\n                                <FormInput id=\"dni\" name=\"dni\" type=\"tel\" label=\"DNI\" placeholder=\"Sin puntos ni espacios\" value={formData.dni} onChange={handleChange} required maxLength=\"8\" />\n                                <FormInput id=\"direccion\" name=\"direccion\" type=\"text\" label=\"Dirección\" placeholder=\"Av. Siempreviva 742\" value={formData.direccion} onChange={handleChange} required />\n                                <FormInput id=\"barrio\" name=\"barrio\" type=\"text\" label=\"Barrio\" placeholder=\"Springfield\" value={formData.barrio} onChange={handleChange} required />\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                    <FormInput id=\"telefonoPrincipal\" name=\"telefonoPrincipal\" type=\"tel\" label=\"Teléfono Principal\" placeholder=\"1122334455\" value={formData.telefonoPrincipal} onChange={handleChange} required />\n                                    <FormInput id=\"telefonoSecundario\" name=\"telefonoSecundario\" type=\"tel\" label=\"Teléfono Secundario\" placeholder=\"(Opcional)\" value={formData.telefonoSecundario} onChange={handleChange} />\n                                </div>\n                                \n                                <hr className=\"my-6\" />\n                                <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">Contacto de Emergencia</h3>\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                    <FormInput id=\"nombreContactoEmergencia\" name=\"nombreContactoEmergencia\" type=\"text\" label=\"Nombre\" placeholder=\"Jane Doe\" value={formData.nombreContactoEmergencia} onChange={handleChange} required />\n                                    <FormInput id=\"telefonoContactoEmergencia\" name=\"telefonoContactoEmergencia\" type=\"tel\" label=\"Teléfono\" placeholder=\"1188776655\" value={formData.telefonoContactoEmergencia} onChange={handleChange} required />\n                                </div>\n                            </>\n                        )}\n                        \n                        {isRegistering && (\n                            <div className=\"my-6 flex justify-center\">\n                                <ReCAPTCHA\n                                    ref={recaptchaRef}\n                                    sitekey={siteKey}\n                                />\n                            </div>\n                        )}\n\n                        <div className=\"mt-6 flex items-center justify-between\">\n                            <button\n                                className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline transition-transform transform hover:scale-105\"\n                                type=\"submit\"\n                            >\n                                {isRegistering ? 'Registrarme' : 'Entrar'}\n                            </button>\n                            {!isRegistering && (\n                                <a\n                                    className=\"inline-block align-baseline font-bold text-sm text-blue-600 hover:text-blue-800 cursor-pointer\"\n                                    onClick={handlePasswordReset}\n                                >\n                                    ¿Olvidaste tu contraseña?\n                                </a>\n                            )}\n                        </div>\n                    </form>\n                    \n                    <div className=\"text-center mt-6\">\n                        <button\n                            onClick={() => { setIsRegistering(!isRegistering); setError(null); }}\n                            className=\"font-bold text-sm text-gray-600 hover:text-gray-800\"\n                        >\n                            {isRegistering ? '¿Ya tienes una cuenta? Inicia Sesión' : '¿No tienes cuenta? Regístrate'}\n                        </button>\n                    </div>\n\n                </div>\n\n                <div className=\"text-center\">\n                    <p className=\"text-gray-500 text-sm mb-4\">o</p>\n                    <button\n                        onClick={handleLoginWithGoogle}\n                        className=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-300 rounded-lg shadow-sm transition-all\"\n                    >\n                        <img src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\" alt=\"Google Logo\" className=\"h-5 w-auto inline-block mr-2 align-middle\"/>\n                        Continuar con Google\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":";;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,kBAAa;QACjC,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACH,SAAtB,qBAAA;mBAAA;wBAAA;0BAAA;QAA4B;IACpC;IAEA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","dplId","process","env","NEXT_DEPLOYMENT_ID","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":";;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;;IAInC,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,MAAMC,QAAQC,QAAQC,GAAG,CAACC,kBAAkB,QACvC,UAAOF,QAAQC,GAAG,CAACC,IACpB,cADsC;IAG1C,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGX,SAASY,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUlB,UAAUmB,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH,SAASL;YACtE,MAAMS,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 725, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx"],"sourcesContent":["import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n"],"names":["convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","children","window","PreloadChunks","moduleIds","modules","BailoutToCSR","reason","displayName"],"mappings":";;;+BA4EA,WAAA;;;eAAA;;;;uBA5EyC;qCACZ;+BAEC;AAE9B,yFAAyF;AACzF,qGAAqG;AACrG,qEAAqE;AACrE,SAASA,cACPC,GAA4D;IAI5D,iHAAiH;IACjH,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,qCAAqC;IACrC,wBAAwB;IACxB,MAAMC,aAAaD,OAAO,aAAaA;IACvC,OAAO;QACLE,SAASD,aACJD,IAA2BE,OAAO,GAClCF;IACP;AACF;AAEA,MAAMG,iBAAiB;IACrBC,QAAQ,IAAMC,QAAQC,OAAO,CAACP,cAAc,IAAM;IAClDQ,SAAS;IACTC,KAAK;AACP;AASA,SAASC,SAASC,OAAwB;IACxC,MAAMC,OAAO;QAAE,GAAGR,cAAc;QAAE,GAAGO,OAAO;IAAC;IAC7C,MAAME,OAAAA,WAAAA,GAAOC,CAAAA,GAAAA,OAAAA,IAAI,EAAC,IAAMF,KAAKP,MAAM,GAAGU,IAAI,CAACf;IAC3C,MAAMgB,UAAUJ,KAAKJ,OAAO;IAE5B,SAASS,kBAAkBC,KAAU;QACnC,MAAMC,kBAAkBH,UAAAA,WAAAA,GACtB,CAAA,GAAA,YAAA,GAAA,EAACA,SAAAA;YAAQI,WAAW;YAAMC,WAAW;YAAMC,OAAO;aAChD;QAEJ,kFAAkF;QAClF,MAAMC,sBAAsB,CAACX,KAAKH,GAAG,IAAI,CAAC,CAACG,KAAKJ,OAAO;QACvD,MAAMgB,OAAOD,sBAAsBE,OAAAA,QAAQ,GAAGC,OAAAA,QAAQ;QACtD,MAAMC,YAAYJ,sBAAsB;YAAEK,UAAUT;QAAgB,IAAI,CAAC;QACzE,MAAMU,WAAWjB,KAAKH,GAAG,GAAA,WAAA,GACvB,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;gBAEG,OAAOqB,WAAW,qBAAA,WAAA,GACjB,CAAA,GAAA,YAAA,GAAA,EAACC,eAAAA,aAAa,EAAA;oBAACC,WAAWpB,KAAKqB,OAAO;qBACpC;8BACJ,CAAA,GAAA,YAAA,GAAA,EAACpB,MAAAA;oBAAM,GAAGK,KAAK;;;2BAGjB,CAAA,GAAA,YAAA,GAAA,EAACgB,qBAAAA,YAAY,EAAA;YAACC,QAAO;sBACnB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACtB,MAAAA;gBAAM,GAAGK,KAAK;;;QAInB,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACM,MAAAA;YAAM,GAAGG,SAAS;sBAAGE;;IAC/B;IAEAZ,kBAAkBmB,WAAW,GAAG;IAEhC,OAAOnB;AACT;MAEA,WAAeP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/node_modules/next/src/shared/lib/app-dynamic.tsx"],"sourcesContent":["import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n"],"names":["dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated"],"mappings":";;;+BAkCA,WAAA;;;eAAwBA;;;;mEAhCH;AAgCN,SAASA,QACtBC,cAA6C,EAC7CC,OAA2B;QAehBC;IAbX,MAAMC,kBAAsC,CAAC;IAE7C,IAAI,OAAOH,mBAAmB,YAAY;QACxCG,gBAAgBC,MAAM,GAAGJ;IAC3B;IAEA,MAAME,gBAAgB;QACpB,GAAGC,eAAe;QAClB,GAAGF,OAAO;IACZ;IAEA,OAAOI,CAAAA,GAAAA,UAAAA,OAAQ,EAAC;QACd,GAAGH,aAAa;QAChBI,OAAO,EAAA,CAAEJ,mCAAAA,cAAcK,iBAAiB,KAAA,OAAA,KAAA,IAA/BL,iCAAiCI,OAAO;IACnD;AACF","ignoreList":[0],"debugId":null}}]
}