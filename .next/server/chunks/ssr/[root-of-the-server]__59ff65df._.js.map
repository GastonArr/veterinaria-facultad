{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/lib/firebaseAdmin.js"],"sourcesContent":["// Historia de Usuario 5: Gestión de Roles de Usuario\n\nimport admin from 'firebase-admin';\n\n// Comprobación para asegurar que el código se ejecuta solo en el servidor.\nif (typeof window === 'undefined') {\n  if (!admin.apps.length) {\n    try {\n      // Para que el Admin SDK funcione en Vercel, necesita las credenciales de la cuenta de servicio.\n      // Estas deben ser almacenadas como una variable de entorno en el proyecto de Vercel.\n      const serviceAccount = JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT_KEY);\n\n      admin.initializeApp({\n        credential: admin.credential.cert(serviceAccount)\n      });\n\n      console.log('Firebase Admin SDK inicializado correctamente.');\n\n    } catch (error) {\n      // Este error es común si la variable de entorno no está configurada en Vercel.\n      console.error('ERROR AL INICIALIZAR FIREBASE ADMIN SDK:', error);\n      console.error('Asegúrate de haber configurado la variable de entorno FIREBASE_SERVICE_ACCOUNT_KEY en Vercel con el JSON de tu cuenta de servicio.');\n    }\n  }\n}\n\n/**\n * Verifica la cookie de sesión de Firebase y devuelve el UID del usuario.\n * @param {string} sessionCookie La cadena de la cookie de sesión.\n * @returns {Promise<string|null>} El UID del usuario o null si la cookie no es válida.\n */\nexport async function getUserIdFromSession(sessionCookie) {\n  if (!sessionCookie) {\n    return null;\n  }\n  try {\n    const decodedClaims = await admin.auth().verifySessionCookie(sessionCookie, false);\n    return decodedClaims.uid;\n  } catch (error) {\n    // Si el SDK no se inicializó, este error puede ocurrir.\n    if (error.code === 'auth/invalid-session-cookie') {\n         console.error(\"La cookie de sesión no es válida. Puede que haya expirado o el SDK de Admin no esté configurado correctamente.\")\n    } else {\n        console.error('Error al verificar la cookie de sesión:', error.code);\n    }\n    return null;\n  }\n}\n\n\nexport default admin;\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;AAErD;;AAEA,2EAA2E;AAC3E,wCAAmC;IACjC,IAAI,CAAC,sIAAK,CAAC,IAAI,CAAC,MAAM,EAAE;QACtB,IAAI;YACF,gGAAgG;YAChG,qFAAqF;YACrF,MAAM,iBAAiB,KAAK,KAAK,CAAC,QAAQ,GAAG,CAAC,4BAA4B;YAE1E,sIAAK,CAAC,aAAa,CAAC;gBAClB,YAAY,sIAAK,CAAC,UAAU,CAAC,IAAI,CAAC;YACpC;YAEA,QAAQ,GAAG,CAAC;QAEd,EAAE,OAAO,OAAO;YACd,+EAA+E;YAC/E,QAAQ,KAAK,CAAC,4CAA4C;YAC1D,QAAQ,KAAK,CAAC;QAChB;IACF;AACF;AAOO,eAAe,qBAAqB,aAAa;IACtD,IAAI,CAAC,eAAe;QAClB,OAAO;IACT;IACA,IAAI;QACF,MAAM,gBAAgB,MAAM,sIAAK,CAAC,IAAI,GAAG,mBAAmB,CAAC,eAAe;QAC5E,OAAO,cAAc,GAAG;IAC1B,EAAE,OAAO,OAAO;QACd,wDAAwD;QACxD,IAAI,MAAM,IAAI,KAAK,+BAA+B;YAC7C,QAAQ,KAAK,CAAC;QACnB,OAAO;YACH,QAAQ,KAAK,CAAC,2CAA2C,MAAM,IAAI;QACvE;QACA,OAAO;IACT;AACF;uCAGe,sIAAK","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/actions.js"],"sourcesContent":["// Historia de Usuario 5: Gestión de Roles de Usuario\n// Historia de Usuario 6: Completar Perfil de Usuario\n\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\n\n// ... (otras funciones como completarPerfil y agregarMascota se mantienen igual)\n\nexport async function completarPerfil(userId, userData) {\n  const firestore = admin.firestore();\n  const auth = admin.auth();\n  const { \n    nombre, \n    apellido, \n    dni, \n    telefonoPrincipal, \n    telefonoSecundario, \n    direccion, \n    nombreContactoEmergencia, \n    telefonoContactoEmergencia \n  } = userData;\n  \n  if (!userId || !nombre || !apellido || !dni || !telefonoPrincipal || !direccion || !nombreContactoEmergencia || !telefonoContactoEmergencia) {\n    return { success: false, error: 'Faltan datos esenciales para completar el perfil.' };\n  }\n\n  try {\n    const userRole = aplicationRoles[dni] || 'dueño';\n    await auth.setCustomUserClaims(userId, { role: userRole });\n\n    await firestore.collection('users').doc(userId).set({\n      nombre,\n      apellido,\n      dni,\n      telefonoPrincipal,\n      telefonoSecundario: telefonoSecundario || '',\n      direccion,\n      nombreContactoEmergencia,\n      telefonoContactoEmergencia,\n      role: userRole,\n      profileCompleted: true,\n      createdAt: admin.firestore.FieldValue.serverTimestamp(),\n    }, { merge: true });\n\n    revalidatePath('/');\n    return { success: true, role: userRole };\n\n  } catch (error) {\n    console.error('Error al completar el perfil:', error);\n    return { success: false, error: 'Ocurrió un error en el servidor.' };\n  }\n}\n\nexport async function agregarMascota(userId, mascotaData) {\n    if (!userId) return { success: false, error: 'Usuario no autenticado.' };\n    const { nombre, especie, raza, fechaNacimiento, tamaño, enAdopcion } = mascotaData;\n    if (!nombre || !especie || !raza || !fechaNacimiento || !tamaño) {\n        return { success: false, error: 'Todos los campos son obligatorios.' };\n    }\n    const firestore = admin.firestore();\n    try {\n        const mascotaRef = await firestore.collection('users').doc(userId).collection('mascotas').add({\n            nombre, especie, raza, fechaNacimiento, tamaño,\n            enAdopcion: enAdopcion || false, \n            createdAt: new Date(),\n        });\n        revalidatePath('/mascotas');\n        return { success: true, mascotaId: mascotaRef.id };\n    } catch (error) {\n        console.error('Error al agregar la mascota:', error);\n        return { success: false, error: 'No se pudo registrar la mascota.' };\n    }\n}\n\n/**\n * @function actualizarPerfil\n * @description Server Action para que un usuario actualice sus datos de perfil (con campos restringidos).\n * @param {string} userId - El ID del usuario.\n * @param {object} userData - Los datos del formulario.\n */\nexport async function actualizarPerfil(userId, userData) {\n  const firestore = admin.firestore();\n\n  // Se extraen solo los campos que permitimos actualizar.\n  const { \n    telefonoPrincipal, \n    telefonoSecundario, \n    direccion, \n    nombreContactoEmergencia, \n    telefonoContactoEmergencia \n  } = userData;\n  \n  // Se construye un objeto solo con los datos que se van a modificar.\n  const datosActualizables = {\n    telefonoPrincipal,\n    telefonoSecundario: telefonoSecundario || '',\n    direccion,\n    nombreContactoEmergencia,\n    telefonoContactoEmergencia,\n    updatedAt: admin.firestore.FieldValue.serverTimestamp(),\n  };\n\n  if (!userId || !telefonoPrincipal || !direccion || !nombreContactoEmergencia || !telefonoContactoEmergencia) {\n    return { success: false, error: 'Faltan datos esenciales para actualizar.' };\n  }\n\n  try {\n    // Se actualiza el documento en Firestore solo con los campos permitidos.\n    await firestore.collection('users').doc(userId).update(datosActualizables);\n\n    revalidatePath('/mis-datos');\n    \n    // Devolvemos los datos actualizados para refrescar la UI correctamente.\n    return { success: true, message: '¡Perfil actualizado con éxito!', updatedData: datosActualizables };\n\n  } catch (error) {\n    console.error('Error al actualizar el perfil en el servidor:', error);\n    return { success: false, error: 'Ocurrió un error en el servidor al actualizar tu perfil.' };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/.next-internal/server/app/mis-datos/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {actualizarPerfil as '602121d6b39caf44eb239659236bbe4b3b42c2f773'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/mis-datos/page.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/mis-datos/page.js <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/mis-datos/page.js <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/mis-datos/page.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/mis-datos/page.js from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/mis-datos/page.js\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}