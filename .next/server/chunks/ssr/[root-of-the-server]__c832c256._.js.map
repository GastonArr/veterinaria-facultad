{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/lib/firebaseConfig.js"],"sourcesContent":["export const firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};"],"names":[],"mappings":";;;;AAAO,MAAM,iBAAiB;IAC5B,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/lib/firebase.js"],"sourcesContent":["import { initializeApp, getApps, getApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { firebaseConfig } from './firebaseConfig';\n\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\nexport { app, db, auth };"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AAEA,MAAM,MAAM,CAAC,IAAA,2KAAO,IAAG,MAAM,GAAG,IAAA,iLAAa,EAAC,8IAAc,IAAI,IAAA,0KAAM;AACtE,MAAM,KAAK,IAAA,iLAAY,EAAC;AACxB,MAAM,OAAO,IAAA,6KAAO,EAAC","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/actions.js"],"sourcesContent":["// Historia de Usuario 5: Gestión de Roles de Usuario\n// Historia de Usuario 6: Completar Perfil de Usuario\n\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\n\n/**\n * @constant aplicationRoles\n * @description Define roles especiales asignados a usuarios específicos según su DNI.\n * Esto centraliza la lógica de asignación de roles de administrador o empleado.\n * Corresponde a la \"Historia de Usuario 5: Gestión de Roles de Usuario\".\n */\nconst aplicationRoles = {\n  '00000001': 'admin',      // Magali - DNI sin puntos\n  '00000002': 'peluquera',\n  '00000003': 'transporte',\n};\n\n/**\n * @function completarPerfil\n * @description Server Action para guardar los datos del perfil de un usuario y asignarle un rol.\n * Se ejecuta después de que un usuario se registra exitosamente.\n * Corresponde a las \"Historias de Usuario 5 y 6\".\n * @param {string} userId - El ID del usuario de Firebase Authentication.\n * @param {object} userData - Los datos del perfil del formulario.\n */\nexport async function completarPerfil(userId, userData) {\n  const firestore = admin.firestore();\n  const auth = admin.auth();\n\n  const { \n    nombre, \n    apellido, \n    dni, \n    telefonoPrincipal, \n    telefonoSecundario, \n    direccion, \n    barrio, \n    nombreContactoEmergencia, \n    telefonoContactoEmergencia \n  } = userData;\n  \n  if (!userId || !nombre || !apellido || !dni || !telefonoPrincipal || !direccion || !barrio || !nombreContactoEmergencia || !telefonoContactoEmergencia) {\n    console.error('Validation failed. Missing data:', { userId, ...userData });\n    return { success: false, error: 'Faltan datos esenciales para completar el perfil.' };\n  }\n\n  try {\n    // 1. Asignación de Rol (HU 5)\n    // Se verifica si el DNI del usuario corresponde a un rol especial.\n    // Si no, se le asigna el rol 'dueño' por defecto.\n    const userRole = aplicationRoles[dni] || 'dueño';\n\n    // Se establece el \"custom claim\" en Firebase Authentication. Este token de rol\n    // se usará en toda la app para controlar el acceso.\n    await auth.setCustomUserClaims(userId, { role: userRole });\n\n    // 2. Guardar Datos del Perfil en Firestore (HU 6)\n    // Se almacenan los detalles del perfil en la colección 'users'.\n    await firestore.collection('users').doc(userId).set({\n      nombre,\n      apellido,\n      dni,\n      telefonoPrincipal,\n      telefonoSecundario: telefonoSecundario || '',\n      direccion,\n      barrio,\n      nombreContactoEmergencia,\n      telefonoContactoEmergencia,\n      role: userRole,\n      profileCompleted: true,\n      createdAt: admin.firestore.FieldValue.serverTimestamp(),\n    }, { merge: true });\n\n    revalidatePath('/');\n    \n    return { success: true, role: userRole };\n\n  } catch (error) {\n    console.error('Error al completar el perfil en el servidor:', error);\n    return { success: false, error: 'Ocurrió un error en el servidor al procesar tu perfil.' };\n  }\n}\n\n/**\n * Server Action para agregar una nueva mascota a un usuario.\n */\nexport async function agregarMascota(userId, mascotaData) {\n    if (!userId) {\n        return { success: false, error: 'Usuario no autenticado.' };\n    }\n\n    const { nombre, especie, raza, fechaNacimiento, tamaño, enAdopcion } = mascotaData;\n\n    if (!nombre || !especie || !raza || !fechaNacimiento || !tamaño) {\n        return { success: false, error: 'Todos los campos, incluyendo el tamaño, son obligatorios.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const mascotaRef = await firestore.collection('users').doc(userId).collection('mascotas').add({\n            nombre,\n            especie,\n            raza,\n            fechaNacimiento,\n            tamaño,\n            enAdopcion: enAdopcion || false, \n            createdAt: new Date(),\n        });\n\n        revalidatePath('/mascotas');\n\n        return { success: true, mascotaId: mascotaRef.id };\n\n    } catch (error) {\n        console.error('Error al agregar la mascota:', error);\n        return { success: false, error: 'No se pudo registrar la mascota en la base de datos.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IA4BsB,kBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/contexts/AuthContext.js"],"sourcesContent":["'use client';\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { \n    onAuthStateChanged,\n    GoogleAuthProvider,\n    signInWithPopup,\n    signOut,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    sendPasswordResetEmail,\n    updatePassword,\n    EmailAuthProvider,\n    reauthenticateWithCredential\n} from 'firebase/auth';\nimport { auth } from '@/lib/firebase';\nimport { useRouter } from 'next/navigation';\nimport { completarPerfil } from '@/app/actions';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [userRole, setUserRole] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const router = useRouter();\n\n    /**\n     * @function loginWithGoogle\n     * @description Inicia sesión o registra a un usuario utilizando su cuenta de Google.\n     * Corresponde a la \"Historia de Usuario 3: Inicio de Sesión con Google\".\n     */\n    const loginWithGoogle = async () => {\n        const provider = new GoogleAuthProvider();\n        try {\n            const result = await signInWithPopup(auth, provider);\n            return result;\n        } catch (error) {\n            console.error(\"Error durante el inicio de sesión con Google:\", error);\n        }\n    };\n\n    /**\n     * @function loginWithEmail\n     * @description Autentica a un usuario registrado mediante su correo electrónico y contraseña.\n     * Corresponde a la \"Historia de Usuario 2: Inicio de Sesión de Usuario\".\n     */\n    const loginWithEmail = async (email, password) => {\n        try {\n            const result = await signInWithEmailAndPassword(auth, email, password);\n            return result;\n        } catch (error) {\n            console.error(\"Error durante el inicio de sesión con email y contraseña:\", error);\n            throw error;\n        }\n    };\n\n    /**\n     * @function registerWithEmailAndPassword\n     * @description Registra un nuevo usuario con correo y contraseña.\n     * Tras el registro, invoca la función para completar el perfil inicial.\n     * Corresponde a la \"Historia de Usuario 1: Registro de Nuevo Usuario\" y\n     * a la \"Historia de Usuario 6: Completar Perfil de Usuario\".\n     */\n    const registerWithEmailAndPassword = async (email, password, profileData) => {\n        try {\n            const result = await createUserWithEmailAndPassword(auth, email, password);\n            const user = result.user;\n            if (user) {\n                // Se llama a la server action para guardar los datos adicionales del perfil.\n                await completarPerfil(user.uid, profileData);\n            }\n            return result;\n        } catch (error) {\n            console.error(\"Error durante el registro:\", error);\n            throw error;\n        }\n    };\n\n    /**\n     * @function resetPassword\n     * @description Envía un correo electrónico al usuario para que pueda restablecer su contraseña.\n     * Corresponde a la \"Historia de Usuario 4: Recuperación de Contraseña\".\n     */\n    const resetPassword = async (email) => {\n        try {\n            await sendPasswordResetEmail(auth, email);\n        } catch (error) {\n            console.error(\"Error al enviar el correo de restablecimiento de contraseña:\", error);\n            throw error;\n        }\n    };\n\n\n    const changePassword = async (currentPassword, newPassword) => {\n        const user = auth.currentUser;\n        if (!user || !user.email) {\n            throw new Error(\"No hay un usuario autenticado para realizar esta operación.\");\n        }\n\n        // 1. Crear la credencial con el email del usuario y su contraseña actual\n        const credential = EmailAuthProvider.credential(user.email, currentPassword);\n\n        try {\n            // 2. Re-autenticar al usuario. Esto verifica que conoce su contraseña actual.\n            await reauthenticateWithCredential(user, credential);\n\n            // 3. Si la re-autenticación fue exitosa, actualizar la contraseña.\n            await updatePassword(user, newPassword);\n\n        } catch (error) {\n            console.error(\"Error al cambiar la contraseña:\", error);\n            // Lanzar el error para poder gestionarlo en el componente (ej. contraseña incorrecta)\n            throw error;\n        }\n    };\n\n    const logout = async () => {\n        try {\n            await signOut(auth);\n            await fetch('/api/auth/session', { method: 'DELETE' });\n            router.push('/login');\n        } catch (error) {\n            console.error(\"Error durante el cierre de sesión:\", error);\n        }\n    };\n\n    /**\n     * useEffect para observar cambios en el estado de autenticación.\n     * Cuando un usuario inicia o cierra sesión, este efecto se ejecuta.\n     * Obtiene el token de ID del usuario y extrae el \"custom claim\" del rol.\n     * Si no tiene un rol asignado, se le da el rol de 'dueño' por defecto.\n     * Corresponde a la \"Historia de Usuario 5: Gestión de Roles de Usuario\".\n     */\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\n            setLoading(true);\n            if (currentUser) {\n                try {\n                    const idToken = await currentUser.getIdToken();\n                    // Se envía el token al backend para crear una cookie de sesión.\n                    await fetch('/api/auth/session', {\n                        method: 'POST',\n                        headers: { 'Content-Type': 'application/json' },\n                        body: JSON.stringify({ idToken }),\n                    });\n\n                    // Se fuerza la actualización del token para obtener los claims más recientes.\n                    const idTokenResult = await currentUser.getIdTokenResult(true);\n                    // Se lee el rol desde los custom claims del token.\n                    const roleFromClaim = idTokenResult.claims.role;\n                    \n                    setUser(currentUser);\n                    // Se establece el rol del usuario en el contexto. Por defecto es 'dueño'.\n                    setUserRole(roleFromClaim || 'dueño');\n\n                } catch (error) {\n                    console.error(\"Error al gestionar la sesión del usuario:\", error);\n                    // En caso de error, se mantiene al usuario pero con el rol base.\n                    setUser(currentUser);\n                    setUserRole('dueño');\n                }\n            } else {\n                // Si no hay usuario, se limpia el estado.\n                setUser(null);\n                setUserRole(null);\n            }\n            setLoading(false);\n        });\n\n        return () => unsubscribe();\n    }, []);\n\n    const value = {\n        user,\n        userRole, \n        loading,\n        loginWithGoogle,\n        loginWithEmail,\n        registerWithEmailAndPassword,\n        resetPassword,\n        changePassword, // <-- Exportar la nueva función\n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/Header.jsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useAuth } from '@/contexts/AuthContext';\n\n// --- Componente para los items del menú ---\n// Corregido: La className y onClick se aplican directamente al Link.\nconst MenuItem = ({ href, children, onClick, isDanger }) => (\n  <Link \n    href={href || '#'}\n    onClick={onClick}\n    className={`block w-full text-left px-4 py-2 text-sm ${isDanger ? 'text-red-600' : 'text-gray-700'} hover:bg-gray-100 hover:text-gray-900 rounded-md transition-colors`}\n  >\n    {children}\n  </Link>\n);\n\n// --- Componente Principal del Header ---\nconst Header = ({ userData }) => {\n  const { logout } = useAuth();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const menuRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setIsMenuOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const getInitials = (name) => {\n    if (!name) return '?';\n    const names = name.split(' ');\n    if (names.length > 1) {\n      return `${names[0][0]}${names[1][0]}`.toUpperCase();\n    }\n    return name.substring(0, 2).toUpperCase();\n  }\n\n  return (\n    <header className=\"bg-white text-gray-800 p-4 flex justify-between items-center shadow-md sticky top-0 z-50 w-full\">\n\n      {/* 1. Logo/Título a la Izquierda */}\n      {/* Corregido: Se eliminó la etiqueta <a> anidada */}\n      <div className=\"flex-shrink-0\">\n        <Link \n          href=\"/\"\n          className=\"text-xl font-bold text-gray-900 hover:text-violet-700 transition-colors\"\n        >\n          Veterinaria Magali Martin\n        </Link>\n      </div>\n\n      {/* 2. Acciones del Usuario a la Derecha */}\n      <div className=\"flex-shrink-0\">\n        {userData.isLoggedIn ? (\n          <div className=\"relative\" ref={menuRef}>\n            <button onClick={() => setIsMenuOpen(!isMenuOpen)} className=\"flex items-center justify-center bg-gray-200 rounded-full h-10 w-10 text-gray-600 font-bold text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500 overflow-hidden\">\n              {userData.picture ? (\n                <Image src={userData.picture} alt=\"Avatar\" width={40} height={40} />\n              ) : (\n                <span>{getInitials(userData.name)}</span>\n              )}\n            </button>\n\n            {isMenuOpen && (\n              <div className=\"origin-top-right absolute right-0 mt-2 w-64 rounded-xl shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none p-2\">\n                <div className=\"px-4 py-3 border-b mb-2\">\n                  <p className=\"text-sm font-semibold text-gray-900 truncate\">{userData.name}</p>\n                  <p className=\"text-xs text-gray-500 truncate\">{userData.email}</p>\n                </div>\n                \n                <div className=\"space-y-1\">\n                    <MenuItem href=\"/mis-datos\">Mis Datos</MenuItem>\n                    <MenuItem href=\"/mascotas\">Mis Mascotas</MenuItem>\n                    <MenuItem href=\"/mis-turnos\">Mis Turnos</MenuItem>\n                </div>\n\n                {userData.role === 'admin' && (\n                  <div className=\"py-2\">\n                    <div className=\"bg-red-50 rounded-md\">\n                      <MenuItem href=\"/admin\" isDanger>Panel de Admin</MenuItem>\n                    </div>\n                  </div>\n                )}\n                \n                <div className=\"border-t mt-2 pt-2\">\n                  <MenuItem onClick={logout} isDanger>Cerrar Sesión</MenuItem>\n                </div>\n              </div>\n            )}\n          </div>\n        ) : (\n          /* Corregido: Se eliminó la etiqueta <a> anidada */\n          <Link \n            href=\"/login\"\n            className=\"bg-violet-600 hover:bg-violet-700 text-white font-semibold px-4 py-2 rounded-full transition-colors\"\n          >\n            Iniciar Sesión\n          </Link>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,6CAA6C;AAC7C,qEAAqE;AACrE,MAAM,WAAW,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,iBACrD,8OAAC,uKAAI;QACH,MAAM,QAAQ;QACd,SAAS;QACT,WAAW,CAAC,yCAAyC,EAAE,WAAW,iBAAiB,gBAAgB,mEAAmE,CAAC;kBAEtK;;;;;;AAIL,0CAA0C;AAC1C,MAAM,SAAS,CAAC,EAAE,QAAQ,EAAE;IAC1B,MAAM,EAAE,MAAM,EAAE,GAAG,IAAA,yIAAO;IAC1B,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAC7C,MAAM,UAAU,IAAA,+MAAM,EAAC;IAEvB,IAAA,kNAAS,EAAC;QACR,MAAM,qBAAqB,CAAC;YAC1B,IAAI,QAAQ,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,QAAQ,CAAC,MAAM,MAAM,GAAG;gBAC9D,cAAc;YAChB;QACF;QACA,SAAS,gBAAgB,CAAC,aAAa;QACvC,OAAO,IAAM,SAAS,mBAAmB,CAAC,aAAa;IACzD,GAAG,EAAE;IAEL,MAAM,cAAc,CAAC;QACnB,IAAI,CAAC,MAAM,OAAO;QAClB,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,IAAI,MAAM,MAAM,GAAG,GAAG;YACpB,OAAO,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,WAAW;QACnD;QACA,OAAO,KAAK,SAAS,CAAC,GAAG,GAAG,WAAW;IACzC;IAEA,qBACE,8OAAC;QAAO,WAAU;;0BAIhB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,uKAAI;oBACH,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;0BAMH,8OAAC;gBAAI,WAAU;0BACZ,SAAS,UAAU,iBAClB,8OAAC;oBAAI,WAAU;oBAAW,KAAK;;sCAC7B,8OAAC;4BAAO,SAAS,IAAM,cAAc,CAAC;4BAAa,WAAU;sCAC1D,SAAS,OAAO,iBACf,8OAAC,wIAAK;gCAAC,KAAK,SAAS,OAAO;gCAAE,KAAI;gCAAS,OAAO;gCAAI,QAAQ;;;;;yFAE9D,8OAAC;0CAAM,YAAY,SAAS,IAAI;;;;;;;;;;;wBAInC,4BACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAE,WAAU;sDAAgD,SAAS,IAAI;;;;;;sDAC1E,8OAAC;4CAAE,WAAU;sDAAkC,SAAS,KAAK;;;;;;;;;;;;8CAG/D,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAS,MAAK;sDAAa;;;;;;sDAC5B,8OAAC;4CAAS,MAAK;sDAAY;;;;;;sDAC3B,8OAAC;4CAAS,MAAK;sDAAc;;;;;;;;;;;;gCAGhC,SAAS,IAAI,KAAK,yBACjB,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAS,MAAK;4CAAS,QAAQ;sDAAC;;;;;;;;;;;;;;;;8CAKvC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAS,SAAS;wCAAQ,QAAQ;kDAAC;;;;;;;;;;;;;;;;;;;;;;+DAM5C,iDAAiD,iBACjD,8OAAC,uKAAI;oBACH,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;;;;;AAOX;uCAEe","debugId":null}}]
}