{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/actions/turnosActions.js"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\n\n// --- Lógica para Turnos de Peluquería ---\n\nconst MAX_PERROS_GRANDES_POR_DIA = 2;\nconst MAX_TURNOS_POR_TURNO_PELUQUERIA = 8;\n\nexport async function solicitarTurnoPeluqueria(turnoData) {\n    const { clienteId, mascotaId, fecha, turno, servicios } = turnoData;\n\n    if (!clienteId || !mascotaId || !fecha || !turno) {\n        return { success: false, error: 'Faltan datos esenciales para solicitar el turno.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const mascotaRef = firestore.collection('users').doc(clienteId).collection('mascotas').doc(mascotaId);\n        const mascotaSnap = await mascotaRef.get();\n\n        if (!mascotaSnap.exists) {\n            return { success: false, error: 'La mascota seleccionada no existe.' };\n        }\n        const tamañoMascota = mascotaSnap.data().tamaño;\n\n        const resultado = await firestore.runTransaction(async (transaction) => {\n            const turnosRef = firestore.collection('turnos');\n\n            if (tamañoMascota === 'grande') {\n                const qGrandes = turnosRef\n                    .where('fecha', '==', fecha)\n                    .where('tipo', '==', 'peluqueria')\n                    .where('tamañoMascota', '==', 'grande')\n                    .where('estado', 'in', ['pendiente', 'confirmado']);\n                \n                const snapGrandes = await transaction.get(qGrandes);\n                if (snapGrandes.docs.length >= MAX_PERROS_GRANDES_POR_DIA) {\n                    throw new Error('El cupo para perros grandes en esta fecha ya está completo.');\n                }\n            }\n\n            const qTurno = turnosRef\n                .where('fecha', '==', fecha)\n                .where('turno', '==', turno)\n                .where('tipo', '==', 'peluqueria')\n                .where('estado', 'in', ['pendiente', 'confirmado']);\n\n            const snapTurno = await transaction.get(qTurno);\n            if (snapTurno.docs.length >= MAX_TURNOS_POR_TURNO_PELUQUERIA) {\n                throw new Error(`El turno de la ${turno} para esta fecha ya está completo.`);\n            }\n\n            const nuevoTurnoRef = firestore.collection('turnos').doc();\n            transaction.set(nuevoTurnoRef, {\n                ...turnoData,\n                tamañoMascota,\n                estado: 'pendiente',\n                createdAt: new Date().toISOString(),\n            });\n\n            return { success: true, turnoId: nuevoTurnoRef.id };\n        });\n\n        revalidatePath('/admin/turnos');\n        revalidatePath('/mis-turnos');\n        return resultado;\n\n    } catch (error) {\n        console.error('Error en la transacción de solicitud de turno de peluquería:', error);\n        return { success: false, error: error.message };\n    }\n}\n\n\n// --- Lógica para Turnos de Consulta ---\n\nexport async function solicitarTurnoConsulta(turnoData) {\n    const { clienteId, mascotaId, fecha, turno, motivo } = turnoData;\n\n    if (!clienteId || !mascotaId || !fecha || !turno || !motivo) {\n        return { success: false, error: 'Faltan datos esenciales para solicitar el turno.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const nuevoTurnoRef = firestore.collection('turnos').doc();\n        \n        await nuevoTurnoRef.set({\n            ...turnoData,\n            tipo: 'consulta',\n            estado: 'pendiente',\n            createdAt: new Date().toISOString(),\n        });\n\n        revalidatePath('/admin/turnos');\n        revalidatePath('/mis-turnos');\n\n        return { success: true, turnoId: nuevoTurnoRef.id };\n\n    } catch (error) {\n        console.error('Error al solicitar el turno de consulta:', error);\n        return { success: false, error: 'Ocurrió un error inesperado al guardar la solicitud.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IAWsB,2BAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/FormularioTurnoPeluqueria.jsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { DayPicker } from 'react-day-picker';\nimport 'react-day-picker/dist/style.css';\nimport { es } from 'date-fns/locale';\nimport { solicitarTurnoPeluqueria } from '@/app/actions/turnosActions';\n\nexport default function FormularioTurnoPeluqueria({ mascotas }) {\n    const { user } = useAuth();\n    const [mascota, setMascota] = useState('');\n    const [fecha, setFecha] = useState(null);\n    const [turno, setTurno] = useState(''); // 'manana' o 'tarde'\n    const [servicios, setServicios] = useState({\n        cepillado: false,\n        rapado: false,\n        corteTijera: false,\n    });\n    const [transporte, setTransporte] = useState(false); // Nuevo estado para el transporte\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleServicioChange = (event) => {\n        const { name, checked } = event.target;\n        setServicios(prev => ({ ...prev, [name]: checked }));\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (!user) {\n            setError('Tu sesión ha expirado, por favor, recarga la página.');\n            return;\n        }\n        if (!mascota || !fecha || !turno) {\n            setError('Por favor, completa todos los campos: mascota, fecha y turno.');\n            return;\n        }\n\n        setLoading(true);\n        setError('');\n        setSuccess('');\n\n        const servicesArray = Object.keys(servicios).filter(key => servicios[key]);\n        \n        const turnoData = {\n            clienteId: user.uid,\n            mascotaId: mascota,\n            fecha: fecha.toISOString().split('T')[0],\n            turno,\n            servicios: servicesArray,\n            transporte: transporte, // Se añade el valor de transporte\n            tipo: 'peluqueria',\n        };\n\n        try {\n            const result = await solicitarTurnoPeluqueria(turnoData);\n            if (result.success) {\n                setSuccess('¡Solicitud de turno enviada con éxito! Recibirás una confirmación por la misma vía.');\n                // Reset form\n                setMascota('');\n                setFecha(null);\n                setTurno('');\n                setServicios({ cepillado: false, rapado: false, corteTijera: false });\n                setTransporte(false); // Reset del transporte\n            } else {\n                setError(result.error || 'No se pudo procesar la solicitud.');\n            }\n        } catch (err) {\n            setError('Ocurrió un error inesperado al comunicarnos con el servidor.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const today = new Date();\n    const disabledDays = [\n        { dayOfWeek: [0, 6] }, // Deshabilita Sábados (6) y Domingos (0)\n        { before: today }\n    ];\n\n    return (\n        <form onSubmit={handleSubmit} className=\"max-w-xl mx-auto bg-white p-8 rounded-2xl shadow-lg space-y-6\">\n            <h2 className=\"text-2xl font-bold text-center text-gray-800\">Solicitar Turno de Peluquería</h2>\n\n            {error && <p className=\"text-sm text-red-600 bg-red-100 p-3 rounded-md text-center\">{error}</p>}\n            {success && <p className=\"text-sm text-green-600 bg-green-100 p-3 rounded-md text-center\">{success}</p>}\n\n            <div>\n                <label htmlFor=\"mascota\" className=\"block text-sm font-medium text-gray-700 mb-1\">Elige tu mascota</label>\n                <select id=\"mascota\" value={mascota} onChange={(e) => setMascota(e.target.value)} required className=\"w-full input\">\n                    <option value=\"\">Selecciona una mascota</option>\n                    {mascotas.map(m => (\n                        <option key={m.id} value={m.id}>{m.nombre} ({m.tamaño})</option>\n                    ))}\n                </select>\n            </div>\n\n            <div className=\"flex flex-col items-center\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Selecciona el día</label>\n                <DayPicker\n                    mode=\"single\"\n                    selected={fecha}\n                    onSelect={setFecha}\n                    locale={es}\n                    disabled={disabledDays} // Se aplica la nueva regla de días deshabilitados\n                    className=\"bg-violet-50 p-4 rounded-lg\"\n                    modifiersClassNames={{\n                        selected: 'bg-violet-600 text-white',\n                        today: 'text-violet-700 font-bold',\n                    }}\n                />\n            </div>\n            \n            <div>\n                 <label className=\"block text-sm font-medium text-gray-700 mb-2\">Selecciona el turno</label>\n                 <div className=\"grid grid-cols-2 gap-4\">\n                    <button type=\"button\" onClick={() => setTurno('manana')} className={`py-3 rounded-lg text-sm font-semibold transition-colors ${turno === 'manana' ? 'bg-violet-600 text-white shadow-md' : 'bg-gray-200 text-gray-700'}`}>\n                        Turno Mañana (8hs - 12hs)\n                    </button>\n                    <button type=\"button\" onClick={() => setTurno('tarde')} className={`py-3 rounded-lg text-sm font-semibold transition-colors ${turno === 'tarde' ? 'bg-violet-600 text-white shadow-md' : 'bg-gray-200 text-gray-700'}`}>\n                        Turno Tarde (13hs - 17hs)\n                    </button>\n                 </div>\n            </div>\n\n            <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Servicios Adicionales</label>\n                <div className=\"space-y-2\">\n                    <div className=\"flex items-center\">\n                        <input id=\"cepillado\" name=\"cepillado\" type=\"checkbox\" checked={servicios.cepillado} onChange={handleServicioChange} className=\"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\" />\n                        <label htmlFor=\"cepillado\" className=\"ml-3 block text-sm text-gray-800\">Cepillado</label>\n                    </div>\n                    <div className=\"flex items-center\">\n                        <input id=\"rapado\" name=\"rapado\" type=\"checkbox\" checked={servicios.rapado} onChange={handleServicioChange} className=\"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\" />\n                        <label htmlFor=\"rapado\" className=\"ml-3 block text-sm text-gray-800\">Rapado Parejo</label>\n                    </div>\n                    <div className=\"flex items-center\">\n                        <input id=\"corteTijera\" name=\"corteTijera\" type=\"checkbox\" checked={servicios.corteTijera} onChange={handleServicioChange} className=\"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\" />\n                        <label htmlFor=\"corteTijera\" className=\"ml-3 block text-sm text-gray-800\">Corte a Tijera</label>\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <div className=\"flex items-center\">\n                    <input id=\"transporte\" name=\"transporte\" type=\"checkbox\" checked={transporte} onChange={(e) => setTransporte(e.target.checked)} className=\"h-4 w-4 text-violet-600 focus:ring-violet-500 border-gray-300 rounded\" />\n                    <label htmlFor=\"transporte\" className=\"ml-3 block text-sm font-medium text-gray-800\">¿Necesitas transporte?</label>\n                </div>\n            </div>\n\n            <button type=\"submit\" disabled={loading || !fecha || !turno || !mascota} className=\"w-full flex justify-center py-3 px-4 border border-transparent rounded-full shadow-sm text-sm font-medium text-white bg-violet-600 hover:bg-violet-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-violet-500 disabled:bg-gray-400 disabled:cursor-not-allowed\">\n                {loading ? 'Enviando Solicitud...' : 'Solicitar Turno'}\n            </button>\n        </form>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/PrivateRoute.js"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\n\nexport default function PrivateRoute({ children }) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isProfileComplete, setIsProfileComplete] = useState(false);\n  const [checkingProfile, setCheckingProfile] = useState(true);\n\n  useEffect(() => {\n    if (loading) return;\n\n    // If no user, redirect to login, but avoid loop if already there\n    if (!user) {\n      if (pathname !== '/login') {\n        router.push('/login');\n      }\n      // Set checking to false since we've made our decision\n      setCheckingProfile(false);\n      return;\n    }\n\n    const checkUserProfile = async () => {\n      try {\n        // Corrected collection from 'clientes' to 'users'\n        const userDocRef = doc(db, 'users', user.uid);\n        const userDoc = await getDoc(userDocRef);\n        \n        // Use the 'profileCompleted' flag for a more robust check\n        if (userDoc.exists() && userDoc.data().profileCompleted) {\n          setIsProfileComplete(true);\n        } else {\n          setIsProfileComplete(false);\n          if (pathname !== '/completar-perfil') {\n            router.push('/completar-perfil');\n          }\n        }\n      } catch (error) {\n        console.error(\"Error al verificar el perfil:\", error);\n        // On error, we'll assume profile is incomplete to be safe\n        setIsProfileComplete(false);\n        if (pathname !== '/completar-perfil') {\n          router.push('/completar-perfil');\n        }\n      } finally {\n        setCheckingProfile(false);\n      }\n    };\n\n    checkUserProfile();\n\n  }, [user, loading, router, pathname]);\n\n  // Show a loading indicator while we verify auth and profile status\n  if (loading || checkingProfile) {\n    return <div>Cargando...</div>; // Or a more sophisticated spinner/skeleton component\n  }\n\n  // If user is not logged in, and we are on a public route like /login, show the page\n  if (!user && pathname === '/login'){\n    return children;\n  }\n\n  // If the profile is complete, show the requested page\n  if (isProfileComplete) {\n    return children;\n  }\n  \n  // If the profile is not complete, but we are on the page to complete it, show the page\n  if (!isProfileComplete && pathname === '/completar-perfil') {\n    return children;\n  }\n\n  // In other cases (like waiting for redirect), return null to prevent content flash\n  return null;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AANA;;;;;;;AAQe,SAAS,aAAa,EAAE,QAAQ,EAAE;IAC/C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,yIAAO;IACjC,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,WAAW,IAAA,iJAAW;IAC5B,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAAC;IAC3D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAC;IAEvD,IAAA,kNAAS,EAAC;QACR,IAAI,SAAS;QAEb,iEAAiE;QACjE,IAAI,CAAC,MAAM;YACT,IAAI,aAAa,UAAU;gBACzB,OAAO,IAAI,CAAC;YACd;YACA,sDAAsD;YACtD,mBAAmB;YACnB;QACF;QAEA,MAAM,mBAAmB;YACvB,IAAI;gBACF,kDAAkD;gBAClD,MAAM,aAAa,IAAA,wKAAG,EAAC,4HAAE,EAAE,SAAS,KAAK,GAAG;gBAC5C,MAAM,UAAU,MAAM,IAAA,2KAAM,EAAC;gBAE7B,0DAA0D;gBAC1D,IAAI,QAAQ,MAAM,MAAM,QAAQ,IAAI,GAAG,gBAAgB,EAAE;oBACvD,qBAAqB;gBACvB,OAAO;oBACL,qBAAqB;oBACrB,IAAI,aAAa,qBAAqB;wBACpC,OAAO,IAAI,CAAC;oBACd;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,iCAAiC;gBAC/C,0DAA0D;gBAC1D,qBAAqB;gBACrB,IAAI,aAAa,qBAAqB;oBACpC,OAAO,IAAI,CAAC;gBACd;YACF,SAAU;gBACR,mBAAmB;YACrB;QACF;QAEA;IAEF,GAAG;QAAC;QAAM;QAAS;QAAQ;KAAS;IAEpC,mEAAmE;IACnE,IAAI,WAAW,iBAAiB;QAC9B,qBAAO,8OAAC;sBAAI;;;;;kBAAmB,qDAAqD;IACtF;IAEA,oFAAoF;IACpF,IAAI,CAAC,QAAQ,aAAa,UAAS;QACjC,OAAO;IACT;IAEA,sDAAsD;IACtD,IAAI,mBAAmB;QACrB,OAAO;IACT;IAEA,uFAAuF;IACvF,IAAI,CAAC,qBAAqB,aAAa,qBAAqB;QAC1D,OAAO;IACT;IAEA,mFAAmF;IACnF,OAAO;AACT","debugId":null}}]
}