{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/PrivateRoute.js"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\n\nexport default function PrivateRoute({ children }) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isProfileComplete, setIsProfileComplete] = useState(false);\n  const [checkingProfile, setCheckingProfile] = useState(true);\n\n  useEffect(() => {\n    if (loading) return;\n\n\n    if (!user) {\n      if (pathname !== '/login') {\n        router.push('/login');\n      }\n\n      setCheckingProfile(false);\n      return;\n    }\n\n    const checkUserProfile = async () => {\n      try {\n\n        const userDocRef = doc(db, 'users', user.uid);\n        const userDoc = await getDoc(userDocRef);\n        \n\n        if (userDoc.exists() && userDoc.data().profileCompleted) {\n          setIsProfileComplete(true);\n        } else {\n          setIsProfileComplete(false);\n          if (pathname !== '/completar-perfil') {\n            router.push('/completar-perfil');\n          }\n        }\n      } catch (error) {\n        console.error(\"Error al verificar el perfil:\", error);\n\n        setIsProfileComplete(false);\n        if (pathname !== '/completar-perfil') {\n          router.push('/completar-perfil');\n        }\n      } finally {\n        setCheckingProfile(false);\n      }\n    };\n\n    checkUserProfile();\n\n  }, [user, loading, router, pathname]);\n\n  \n  if (loading || checkingProfile) {\n    return <div>Cargando...</div>; \n  }\n\n  \n  if (!user && pathname === '/login'){\n    return children;\n  }\n\n\n  if (isProfileComplete) {\n    return children;\n  }\n  \n  \n  if (!isProfileComplete && pathname === '/completar-perfil') {\n    return children;\n  }\n\n \n  return null;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AANA;;;;;;;AAQe,SAAS,aAAa,EAAE,QAAQ,EAAE;IAC/C,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,yIAAO;IACjC,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,WAAW,IAAA,iJAAW;IAC5B,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,iNAAQ,EAAC;IAC3D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAC;IAEvD,IAAA,kNAAS,EAAC;QACR,IAAI,SAAS;QAGb,IAAI,CAAC,MAAM;YACT,IAAI,aAAa,UAAU;gBACzB,OAAO,IAAI,CAAC;YACd;YAEA,mBAAmB;YACnB;QACF;QAEA,MAAM,mBAAmB;YACvB,IAAI;gBAEF,MAAM,aAAa,IAAA,wKAAG,EAAC,4HAAE,EAAE,SAAS,KAAK,GAAG;gBAC5C,MAAM,UAAU,MAAM,IAAA,2KAAM,EAAC;gBAG7B,IAAI,QAAQ,MAAM,MAAM,QAAQ,IAAI,GAAG,gBAAgB,EAAE;oBACvD,qBAAqB;gBACvB,OAAO;oBACL,qBAAqB;oBACrB,IAAI,aAAa,qBAAqB;wBACpC,OAAO,IAAI,CAAC;oBACd;gBACF;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,iCAAiC;gBAE/C,qBAAqB;gBACrB,IAAI,aAAa,qBAAqB;oBACpC,OAAO,IAAI,CAAC;gBACd;YACF,SAAU;gBACR,mBAAmB;YACrB;QACF;QAEA;IAEF,GAAG;QAAC;QAAM;QAAS;QAAQ;KAAS;IAGpC,IAAI,WAAW,iBAAiB;QAC9B,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAGA,IAAI,CAAC,QAAQ,aAAa,UAAS;QACjC,OAAO;IACT;IAGA,IAAI,mBAAmB;QACrB,OAAO;IACT;IAGA,IAAI,CAAC,qBAAqB,aAAa,qBAAqB;QAC1D,OAAO;IACT;IAGA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/actions/turnosActions.js"],"sourcesContent":["\n'use server';\n\nimport { revalidatePath } from 'next/cache';\nimport admin from '@/lib/firebaseAdmin';\nimport { cookies } from 'next/headers';\nimport { getUserIdFromSession } from '@/lib/firebaseAdmin';\n\n// --- Lógica para Turnos de Peluquería ---\n\nconst MAX_PERROS_GRANDES_POR_DIA = 2;\nconst MAX_TURNOS_POR_TURNO_PELUQUERIA = 8;\n\nexport async function solicitarTurnoPeluqueria(turnoData) {\n    const { clienteId, mascotaId, fecha, turno, servicios, transporte, metodoPago } = turnoData;\n\n    if (!clienteId || !mascotaId || !fecha || !turno || !metodoPago) {\n        return { success: false, error: 'Faltan datos esenciales, incluido el método de pago.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const mascotaRef = firestore.collection('users').doc(clienteId).collection('mascotas').doc(mascotaId);\n        const mascotaSnap = await mascotaRef.get();\n\n        if (!mascotaSnap.exists) {\n            return { success: false, error: 'La mascota seleccionada no existe.' };\n        }\n        const tamañoMascota = mascotaSnap.data().tamaño;\n\n        const resultado = await firestore.runTransaction(async (transaction) => {\n            const turnosRef = firestore.collection('turnos');\n\n            if (tamañoMascota === 'grande') {\n                const qGrandes = turnosRef.where('fecha', '==', fecha).where('tipo', '==', 'peluqueria').where('tamañoMascota', '==', 'grande').where('estado', 'in', ['pendiente', 'confirmado']);\n                const snapGrandes = await transaction.get(qGrandes);\n                if (snapGrandes.docs.length >= MAX_PERROS_GRANDES_POR_DIA) {\n                    throw new Error('El cupo para perros grandes en esta fecha ya está completo.');\n                }\n            }\n            const qTurno = turnosRef.where('fecha', '==', fecha).where('turno', '==', turno).where('tipo', '==', 'peluqueria').where('estado', 'in', ['pendiente', 'confirmado']);\n            const snapTurno = await transaction.get(qTurno);\n            if (snapTurno.docs.length >= MAX_TURNOS_POR_TURNO_PELUQUERIA) {\n                throw new Error(`El turno de la ${turno} para esta fecha ya está completo.`);\n            }\n\n            const nuevoTurnoRef = firestore.collection('turnos').doc();\n            transaction.set(nuevoTurnoRef, {\n                ...turnoData,\n                tamañoMascota,\n                estado: 'pendiente',\n                createdAt: new Date().toISOString(),\n            });\n\n            return { success: true, turnoId: nuevoTurnoRef.id };\n        });\n\n        revalidatePath('/admin/turnos');\n        revalidatePath('/mis-turnos');\n        return resultado;\n\n    } catch (error) {\n        console.error('Error en la transacción de solicitud de turno de peluquería:', error);\n        return { success: false, error: error.message };\n    }\n}\n\n\n// --- Lógica para Turnos de Consulta ---\n\nexport async function solicitarTurnoConsulta(turnoData) {\n    // Añadimos 'metodoPago' a la desestructuración\n    const { clienteId, mascotaId, fecha, turno, motivo, metodoPago } = turnoData;\n\n    // Añadimos validación para el nuevo campo\n    if (!clienteId || !mascotaId || !fecha || !turno || !motivo || !metodoPago) {\n        return { success: false, error: 'Faltan datos esenciales, incluido el método de pago.' };\n    }\n\n    const firestore = admin.firestore();\n\n    try {\n        const nuevoTurnoRef = firestore.collection('turnos').doc();\n        \n        // El operador '...' se asegura de que 'metodoPago' se guarde en la BD\n        await nuevoTurnoRef.set({\n            ...turnoData,\n            tipo: 'consulta',\n            estado: 'pendiente',\n            createdAt: new Date().toISOString(),\n        });\n\n        revalidatePath('/admin/turnos');\n        revalidatePath('/mis-turnos');\n\n        return { success: true, turnoId: nuevoTurnoRef.id };\n\n    } catch (error) {\n        console.error('Error al solicitar el turno de consulta:', error);\n        return { success: false, error: 'Ocurrió un error inesperado al guardar la solicitud.' };\n    }\n}\n\n\n// --- LÓGICA DE CANCELACIÓN DE TURNO (PARA USUARIOS) ---\n\nexport async function cancelarTurnoUsuario(turnoId) {\n    const sessionCookie = cookies().get('__session')?.value || '';\n    const userId = await getUserIdFromSession(sessionCookie);\n\n    if (!userId) {\n        return { success: false, error: 'No estás autenticado.' };\n    }\n\n    if (!turnoId) {\n        return { success: false, error: 'No se proporcionó un ID de turno.' };\n    }\n\n    const firestore = admin.firestore();\n    const turnoRef = firestore.collection('turnos').doc(turnoId);\n\n    try {\n        const turnoSnap = await turnoRef.get();\n\n        if (!turnoSnap.exists) {\n            return { success: false, error: 'El turno no existe.' };\n        }\n\n        const turnoData = turnoSnap.data();\n\n        if (turnoData.clienteId !== userId) {\n            return { success: false, error: 'No tienes permiso para cancelar este turno.' };\n        }\n\n        if ([ 'cancelado', 'completado'].includes(turnoData.estado)) {\n            return { success: false, error: 'Este turno ya no se puede cancelar.' };\n        }\n\n        const hoy = new Date();\n        hoy.setHours(0, 0, 0, 0);\n        const fechaTurno = new Date(turnoData.fecha + 'T12:00:00'); \n\n        if (fechaTurno < hoy) {\n            return { success: false, error: 'No se puede cancelar un turno que ya ha pasado.' };\n        }\n\n        await turnoRef.update({\n            estado: 'cancelado',\n            canceladoAt: new Date().toISOString(),\n            canceladoPor: 'usuario'\n        });\n\n        revalidatePath('/mis-turnos');\n        revalidatePath('/admin/turnos');\n\n        return { success: true };\n\n    } catch (error) {\n        console.error('Error al cancelar el turno:', error);\n        return { success: false, error: 'Ocurrió un error inesperado al intentar cancelar el turno.' };\n    }\n}\n"],"names":[],"mappings":";;;;;;;IA2GsB,uBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/components/AccionesTurnoUsuario.jsx"],"sourcesContent":["\n'use client';\n\nimport { useState } from 'react';\nimport { FiTrash2 } from 'react-icons/fi';\nimport { cancelarTurnoUsuario } from '@/app/actions/turnosActions';\n\nexport default function AccionesTurnoUsuario({ turno }) {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [success, setSuccess] = useState('');\n\n    // No mostramos ninguna acción si el turno ya está cancelado, completado o si ya pasó la fecha.\n    const hoy = new Date();\n    hoy.setHours(0, 0, 0, 0);\n    const fechaTurno = new Date(turno.fecha + 'T12:00:00');\n\n    const puedeCancelar = (\n        (turno.estado === 'pendiente' || turno.estado === 'confirmado') && \n        fechaTurno >= hoy\n    );\n\n    if (!puedeCancelar) {\n        return null; // No renderizar nada si no se puede cancelar\n    }\n\n    const handleCancel = async () => {\n        if (!window.confirm('¿Estás seguro de que quieres cancelar este turno? Esta acción no se puede deshacer.')) {\n            return;\n        }\n\n        setLoading(true);\n        setError('');\n        setSuccess('');\n\n        try {\n            const result = await cancelarTurnoUsuario(turno.id);\n            if (result.success) {\n                setSuccess('Turno cancelado con éxito.');\n                // El componente se ocultará automáticamente en la siguiente renderización gracias a revalidatePath\n            } else {\n                setError(result.error || 'No se pudo cancelar el turno.');\n            }\n        } catch (err) {\n            setError('Error de conexión al intentar cancelar.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"flex-shrink-0 self-center mt-4 sm:mt-0\">\n            {error && <p className=\"text-xs text-red-600 mb-2 text-center\">{error}</p>}\n            {success && <p className=\"text-xs text-green-600 mb-2 text-center\">{success}</p>}\n            \n            {!success && (\n                 <button \n                    onClick={handleCancel} \n                    disabled={loading}\n                    className=\"flex items-center justify-center px-4 py-2 border border-red-300 text-sm font-medium rounded-full text-red-600 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                    <FiTrash2 className=\"mr-2 h-4 w-4\"/>\n                    {loading ? 'Cancelando...' : 'Cancelar Turno'}\n                </button>\n            )}\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAJA;;;;;AAMe,SAAS,qBAAqB,EAAE,KAAK,EAAE;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IAEvC,+FAA+F;IAC/F,MAAM,MAAM,IAAI;IAChB,IAAI,QAAQ,CAAC,GAAG,GAAG,GAAG;IACtB,MAAM,aAAa,IAAI,KAAK,MAAM,KAAK,GAAG;IAE1C,MAAM,gBACF,CAAC,MAAM,MAAM,KAAK,eAAe,MAAM,MAAM,KAAK,YAAY,KAC9D,cAAc;IAGlB,IAAI,CAAC,eAAe;QAChB,OAAO,MAAM,6CAA6C;IAC9D;IAEA,MAAM,eAAe;QACjB,IAAI,CAAC,OAAO,OAAO,CAAC,wFAAwF;YACxG;QACJ;QAEA,WAAW;QACX,SAAS;QACT,WAAW;QAEX,IAAI;YACA,MAAM,SAAS,MAAM,IAAA,qLAAoB,EAAC,MAAM,EAAE;YAClD,IAAI,OAAO,OAAO,EAAE;gBAChB,WAAW;YACX,mGAAmG;YACvG,OAAO;gBACH,SAAS,OAAO,KAAK,IAAI;YAC7B;QACJ,EAAE,OAAO,KAAK;YACV,SAAS;QACb,SAAU;YACN,WAAW;QACf;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;;YACV,uBAAS,8OAAC;gBAAE,WAAU;0BAAyC;;;;;;YAC/D,yBAAW,8OAAC;gBAAE,WAAU;0BAA2C;;;;;;YAEnE,CAAC,yBACG,8OAAC;gBACE,SAAS;gBACT,UAAU;gBACV,WAAU;;kCAEV,8OAAC,0JAAQ;wBAAC,WAAU;;;;;;oBACnB,UAAU,kBAAkB;;;;;;;;;;;;;AAKjD","debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":["file:///home/user/veterinariamagali/src/app/mis-turnos/page.js"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { db } from '@/lib/firebase';\nimport { collection, query, where, getDocs, orderBy, doc, getDoc } from 'firebase/firestore';\nimport PrivateRoute from '@/app/components/PrivateRoute';\nimport AccionesTurnoUsuario from '@/app/components/AccionesTurnoUsuario';\nimport { FiClock, FiCheckCircle, FiXCircle, FiCalendar, FiSun, FiMoon, FiScissors } from 'react-icons/fi';\n\nfunction EstadoBadge({ estado }) {\n    const baseClasses = \"px-3 py-1 text-sm font-semibold rounded-full inline-flex items-center shadow-sm\";\n    const styles = {\n        pendiente: { icon: <FiClock className=\"mr-2\" />, classes: \"bg-yellow-100 text-yellow-800\" },\n        confirmado: { icon: <FiCheckCircle className=\"mr-2\" />, classes: \"bg-green-100 text-green-800\" },\n        cancelado: { icon: <FiXCircle className=\"mr-2\" />, classes: \"bg-red-100 text-red-800\" },\n        completado: { icon: <FiCheckCircle className=\"mr-2\" />, classes: \"bg-blue-100 text-blue-800\" },\n    };\n    const style = styles[estado?.toLowerCase()] || styles.pendiente;\n\n    return (\n        <div className={`${baseClasses} ${style.classes}`}>\n            {style.icon}\n            {estado ? estado.charAt(0).toUpperCase() + estado.slice(1) : 'Pendiente'}\n        </div>\n    );\n}\n\nconst MisTurnosContent = () => {\n    const { user } = useAuth();\n    const [turnos, setTurnos] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        if (!user) return;\n\n        const fetchTurnos = async () => {\n            try {\n                const turnosRef = collection(db, 'turnos');\n                const q = query(turnosRef, where('clienteId', '==', user.uid), orderBy('fecha', 'desc'));\n                const turnosSnap = await getDocs(q);\n                \n                const turnosData = await Promise.all(turnosSnap.docs.map(async (d) => {\n                    const turno = { id: d.id, ...d.data() };\n                    let mascotaNombre = 'Mascota desconocida';\n                    if (turno.mascotaId) {\n                        const mascotaRef = doc(db, 'users', user.uid, 'mascotas', turno.mascotaId);\n                        const mascotaSnap = await getDoc(mascotaRef);\n                        if (mascotaSnap.exists()) {\n                            mascotaNombre = mascotaSnap.data().nombre;\n                        }\n                    }\n                    return {\n                        ...turno,\n                        mascotaNombre,\n                        fechaFormateada: new Date(turno.fecha + 'T12:00:00').toLocaleDateString('es-ES', { day: 'numeric', month: 'long', year: 'numeric' })\n                    };\n                }));\n\n                setTurnos(turnosData);\n            } catch (error) {\n                console.error(\"Error al obtener los turnos:\", error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchTurnos();\n    }, [user]);\n\n    if (loading) {\n        return (\n            <div className=\"flex justify-center items-center h-screen bg-gray-50\">\n                 <div className=\"loader\"></div>\n                 <style jsx>{`\n                    .loader { border: 4px solid #f3f3f3; border-top: 4px solid #3498db; border-radius: 50%; width: 40px; height: 40px; animation: spin 1s linear infinite; }\n                    @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }\n                `}</style>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"bg-gray-50 p-4 sm:p-6 lg:p-8\">\n            <div className=\"max-w-7xl mx-auto\">\n                <div className=\"bg-white shadow-lg rounded-2xl p-6 sm:p-8\">\n                     <div className=\"flex items-center mb-8\">\n                        <Link href=\"/\" legacyBehavior>\n                            <a className=\"flex items-center text-gray-600 hover:text-gray-900 transition-colors mr-6\">\n                                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>\n                                <span className=\"ml-1 font-medium\">Volver</span>\n                            </a>\n                        </Link>\n                        <h1 className=\"text-2xl font-bold text-gray-800 whitespace-nowrap\">Mis Turnos</h1>\n                        <div className=\"w-full ml-6 border-b-2 border-dotted border-gray-300\"></div>\n                    </div>\n\n                    {turnos.length === 0 ? (\n                        <div className=\"text-center py-12\">\n                            <FiCalendar className=\"mx-auto text-6xl text-violet-300 mb-4\"/>\n                            <h2 className=\"text-2xl font-semibold text-gray-700 mb-2\">Sin Turnos Solicitados</h2>\n                            <p className=\"text-gray-500 mb-6\">Parece que tus mascotas aún no tienen citas. ¡Vamos a solucionarlo!</p>\n                            <Link href=\"/\" className=\"mt-6 inline-block bg-violet-600 text-white font-bold py-3 px-8 rounded-full hover:bg-violet-700 transition-all duration-300 transform hover:scale-105\">\n                                Pedir un Turno\n                            </Link>\n                        </div>\n                    ) : (\n                        <div className=\"space-y-6\">\n                            {turnos.map(turno => (\n                                <div key={turno.id} className={`bg-white p-6 rounded-2xl shadow-lg border border-gray-200/80 transition-opacity duration-500 ${turno.estado === 'cancelado' ? 'opacity-60' : ''}`}>\n                                    <div className=\"flex flex-col sm:flex-row justify-between\">\n                                        <div className=\"flex-grow mb-4 sm:mb-0\">\n                                            <div className=\"flex items-center mb-3\">\n                                                <h2 className=\"text-2xl font-bold text-gray-900 mr-4\">{turno.mascotaNombre}</h2>\n                                                <EstadoBadge estado={turno.estado} />\n                                            </div>\n                                            <div className=\"text-sm text-gray-600 space-y-2 pl-1\">\n                                                <p className=\"flex items-center\"><FiCalendar className=\"mr-3 text-violet-500\" /> {turno.fechaFormateada}</p>\n                                                <p className=\"flex items-center capitalize\"><FiSun className=\"mr-3 text-yellow-500\"/> Turno {turno.turno}</p>\n                                                {turno.servicios && <p className=\"flex items-center capitalize\"><FiScissors className=\"mr-3 text-gray-500\"/> Servicios: {turno.servicios.join(', ')}</p>}\n                                            </div>\n                                        </div>\n                                        <AccionesTurnoUsuario turno={turno} />\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default function MisTurnosPage() {\n    return (\n        <PrivateRoute>\n            <MisTurnosContent />\n        </PrivateRoute>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}